
2_UART_modular.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000132c  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c8  080014bc  080014bc  000114bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001584  08001584  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001584  08001584  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001584  08001584  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001584  08001584  00011584  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001588  08001588  00011588  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800158c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000038  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000009c  2000009c  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002a29  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000783  00000000  00000000  00022abd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000150  00000000  00000000  00023240  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000108  00000000  00000000  00023390  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001e263  00000000  00000000  00023498  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000019d7  00000000  00000000  000416fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000a4032  00000000  00000000  000430d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000e7104  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000be0  00000000  00000000  000e7158  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000064 	.word	0x20000064
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080014a4 	.word	0x080014a4

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000068 	.word	0x20000068
 80001cc:	080014a4 	.word	0x080014a4

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:

// Trying with printf
#include <stdio.h>
#include "uart.h"

int main (void){
 8000270:	b580      	push	{r7, lr}
 8000272:	b082      	sub	sp, #8
 8000274:	af00      	add	r7, sp, #0

    uart2_tx_init();
 8000276:	f000 f8cd 	bl	8000414 <uart2_tx_init>

    while (1){
//        uart2_write('Y');
    	printf("Hello from STM32L4..........\n\r");
 800027a:	480b      	ldr	r0, [pc, #44]	; (80002a8 <main+0x38>)
 800027c:	f000 f9bc 	bl	80005f8 <iprintf>
    	for (int i = 0; i < 100000; i++){
 8000280:	2300      	movs	r3, #0
 8000282:	607b      	str	r3, [r7, #4]
 8000284:	e00a      	b.n	800029c <main+0x2c>
    		if (i == 50000){
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	f24c 3250 	movw	r2, #50000	; 0xc350
 800028c:	4293      	cmp	r3, r2
 800028e:	d102      	bne.n	8000296 <main+0x26>
    			printf("timer break\n\r");
 8000290:	4806      	ldr	r0, [pc, #24]	; (80002ac <main+0x3c>)
 8000292:	f000 f9b1 	bl	80005f8 <iprintf>
    	for (int i = 0; i < 100000; i++){
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	3301      	adds	r3, #1
 800029a:	607b      	str	r3, [r7, #4]
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	4a04      	ldr	r2, [pc, #16]	; (80002b0 <main+0x40>)
 80002a0:	4293      	cmp	r3, r2
 80002a2:	ddf0      	ble.n	8000286 <main+0x16>
    	printf("Hello from STM32L4..........\n\r");
 80002a4:	e7e9      	b.n	800027a <main+0xa>
 80002a6:	bf00      	nop
 80002a8:	080014bc 	.word	0x080014bc
 80002ac:	080014dc 	.word	0x080014dc
 80002b0:	0001869f 	.word	0x0001869f

080002b4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002b4:	b580      	push	{r7, lr}
 80002b6:	b086      	sub	sp, #24
 80002b8:	af00      	add	r7, sp, #0
 80002ba:	60f8      	str	r0, [r7, #12]
 80002bc:	60b9      	str	r1, [r7, #8]
 80002be:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002c0:	2300      	movs	r3, #0
 80002c2:	617b      	str	r3, [r7, #20]
 80002c4:	e00a      	b.n	80002dc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80002c6:	f3af 8000 	nop.w
 80002ca:	4601      	mov	r1, r0
 80002cc:	68bb      	ldr	r3, [r7, #8]
 80002ce:	1c5a      	adds	r2, r3, #1
 80002d0:	60ba      	str	r2, [r7, #8]
 80002d2:	b2ca      	uxtb	r2, r1
 80002d4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002d6:	697b      	ldr	r3, [r7, #20]
 80002d8:	3301      	adds	r3, #1
 80002da:	617b      	str	r3, [r7, #20]
 80002dc:	697a      	ldr	r2, [r7, #20]
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	429a      	cmp	r2, r3
 80002e2:	dbf0      	blt.n	80002c6 <_read+0x12>
	}

return len;
 80002e4:	687b      	ldr	r3, [r7, #4]
}
 80002e6:	4618      	mov	r0, r3
 80002e8:	3718      	adds	r7, #24
 80002ea:	46bd      	mov	sp, r7
 80002ec:	bd80      	pop	{r7, pc}

080002ee <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002ee:	b580      	push	{r7, lr}
 80002f0:	b086      	sub	sp, #24
 80002f2:	af00      	add	r7, sp, #0
 80002f4:	60f8      	str	r0, [r7, #12]
 80002f6:	60b9      	str	r1, [r7, #8]
 80002f8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fa:	2300      	movs	r3, #0
 80002fc:	617b      	str	r3, [r7, #20]
 80002fe:	e009      	b.n	8000314 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000300:	68bb      	ldr	r3, [r7, #8]
 8000302:	1c5a      	adds	r2, r3, #1
 8000304:	60ba      	str	r2, [r7, #8]
 8000306:	781b      	ldrb	r3, [r3, #0]
 8000308:	4618      	mov	r0, r3
 800030a:	f000 f877 	bl	80003fc <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800030e:	697b      	ldr	r3, [r7, #20]
 8000310:	3301      	adds	r3, #1
 8000312:	617b      	str	r3, [r7, #20]
 8000314:	697a      	ldr	r2, [r7, #20]
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	429a      	cmp	r2, r3
 800031a:	dbf1      	blt.n	8000300 <_write+0x12>
	}
	return len;
 800031c:	687b      	ldr	r3, [r7, #4]
}
 800031e:	4618      	mov	r0, r3
 8000320:	3718      	adds	r7, #24
 8000322:	46bd      	mov	sp, r7
 8000324:	bd80      	pop	{r7, pc}

08000326 <_close>:

int _close(int file)
{
 8000326:	b480      	push	{r7}
 8000328:	b083      	sub	sp, #12
 800032a:	af00      	add	r7, sp, #0
 800032c:	6078      	str	r0, [r7, #4]
	return -1;
 800032e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000332:	4618      	mov	r0, r3
 8000334:	370c      	adds	r7, #12
 8000336:	46bd      	mov	sp, r7
 8000338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800033c:	4770      	bx	lr

0800033e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800033e:	b480      	push	{r7}
 8000340:	b083      	sub	sp, #12
 8000342:	af00      	add	r7, sp, #0
 8000344:	6078      	str	r0, [r7, #4]
 8000346:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000348:	683b      	ldr	r3, [r7, #0]
 800034a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800034e:	605a      	str	r2, [r3, #4]
	return 0;
 8000350:	2300      	movs	r3, #0
}
 8000352:	4618      	mov	r0, r3
 8000354:	370c      	adds	r7, #12
 8000356:	46bd      	mov	sp, r7
 8000358:	f85d 7b04 	ldr.w	r7, [sp], #4
 800035c:	4770      	bx	lr

0800035e <_isatty>:

int _isatty(int file)
{
 800035e:	b480      	push	{r7}
 8000360:	b083      	sub	sp, #12
 8000362:	af00      	add	r7, sp, #0
 8000364:	6078      	str	r0, [r7, #4]
	return 1;
 8000366:	2301      	movs	r3, #1
}
 8000368:	4618      	mov	r0, r3
 800036a:	370c      	adds	r7, #12
 800036c:	46bd      	mov	sp, r7
 800036e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000372:	4770      	bx	lr

08000374 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000374:	b480      	push	{r7}
 8000376:	b085      	sub	sp, #20
 8000378:	af00      	add	r7, sp, #0
 800037a:	60f8      	str	r0, [r7, #12]
 800037c:	60b9      	str	r1, [r7, #8]
 800037e:	607a      	str	r2, [r7, #4]
	return 0;
 8000380:	2300      	movs	r3, #0
}
 8000382:	4618      	mov	r0, r3
 8000384:	3714      	adds	r7, #20
 8000386:	46bd      	mov	sp, r7
 8000388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038c:	4770      	bx	lr
	...

08000390 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000390:	b580      	push	{r7, lr}
 8000392:	b086      	sub	sp, #24
 8000394:	af00      	add	r7, sp, #0
 8000396:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000398:	4a14      	ldr	r2, [pc, #80]	; (80003ec <_sbrk+0x5c>)
 800039a:	4b15      	ldr	r3, [pc, #84]	; (80003f0 <_sbrk+0x60>)
 800039c:	1ad3      	subs	r3, r2, r3
 800039e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003a0:	697b      	ldr	r3, [r7, #20]
 80003a2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003a4:	4b13      	ldr	r3, [pc, #76]	; (80003f4 <_sbrk+0x64>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	2b00      	cmp	r3, #0
 80003aa:	d102      	bne.n	80003b2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003ac:	4b11      	ldr	r3, [pc, #68]	; (80003f4 <_sbrk+0x64>)
 80003ae:	4a12      	ldr	r2, [pc, #72]	; (80003f8 <_sbrk+0x68>)
 80003b0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003b2:	4b10      	ldr	r3, [pc, #64]	; (80003f4 <_sbrk+0x64>)
 80003b4:	681a      	ldr	r2, [r3, #0]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4413      	add	r3, r2
 80003ba:	693a      	ldr	r2, [r7, #16]
 80003bc:	429a      	cmp	r2, r3
 80003be:	d207      	bcs.n	80003d0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003c0:	f000 f8e8 	bl	8000594 <__errno>
 80003c4:	4603      	mov	r3, r0
 80003c6:	220c      	movs	r2, #12
 80003c8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003ca:	f04f 33ff 	mov.w	r3, #4294967295
 80003ce:	e009      	b.n	80003e4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003d0:	4b08      	ldr	r3, [pc, #32]	; (80003f4 <_sbrk+0x64>)
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003d6:	4b07      	ldr	r3, [pc, #28]	; (80003f4 <_sbrk+0x64>)
 80003d8:	681a      	ldr	r2, [r3, #0]
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4413      	add	r3, r2
 80003de:	4a05      	ldr	r2, [pc, #20]	; (80003f4 <_sbrk+0x64>)
 80003e0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003e2:	68fb      	ldr	r3, [r7, #12]
}
 80003e4:	4618      	mov	r0, r3
 80003e6:	3718      	adds	r7, #24
 80003e8:	46bd      	mov	sp, r7
 80003ea:	bd80      	pop	{r7, pc}
 80003ec:	20018000 	.word	0x20018000
 80003f0:	00000400 	.word	0x00000400
 80003f4:	20000080 	.word	0x20000080
 80003f8:	200000a0 	.word	0x200000a0

080003fc <__io_putchar>:
static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate);
static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate);


//printf implementation
int __io_putchar(int ch){
 80003fc:	b580      	push	{r7, lr}
 80003fe:	b082      	sub	sp, #8
 8000400:	af00      	add	r7, sp, #0
 8000402:	6078      	str	r0, [r7, #4]

	uart2_write(ch);
 8000404:	6878      	ldr	r0, [r7, #4]
 8000406:	f000 f85b 	bl	80004c0 <uart2_write>
	return ch;
 800040a:	687b      	ldr	r3, [r7, #4]
}
 800040c:	4618      	mov	r0, r3
 800040e:	3708      	adds	r7, #8
 8000410:	46bd      	mov	sp, r7
 8000412:	bd80      	pop	{r7, pc}

08000414 <uart2_tx_init>:

void uart2_tx_init (void){
 8000414:	b580      	push	{r7, lr}
 8000416:	af00      	add	r7, sp, #0

    /*************** Configure UART GPIO PIN **************/

    /* Enable Clock Access to GPIOA */
    RCC->AHB2ENR |= GPIOAEN;
 8000418:	4b26      	ldr	r3, [pc, #152]	; (80004b4 <uart2_tx_init+0xa0>)
 800041a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800041c:	4a25      	ldr	r2, [pc, #148]	; (80004b4 <uart2_tx_init+0xa0>)
 800041e:	f043 0301 	orr.w	r3, r3, #1
 8000422:	64d3      	str	r3, [r2, #76]	; 0x4c

    /* Set PA2 mode to alternate function mode */
    GPIOA->MODER &=~(1<<4);
 8000424:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800042e:	f023 0310 	bic.w	r3, r3, #16
 8000432:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |= (1<<5);
 8000434:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800043e:	f043 0320 	orr.w	r3, r3, #32
 8000442:	6013      	str	r3, [r2, #0]

    /* Set PA2 alternate function type to UART_TX (AF07)*/
    GPIOA->AFR[0] |= (1<<8);
 8000444:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000448:	6a1b      	ldr	r3, [r3, #32]
 800044a:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800044e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000452:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] |= (1<<9);
 8000454:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000458:	6a1b      	ldr	r3, [r3, #32]
 800045a:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800045e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000462:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] |= (1<<10);
 8000464:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000468:	6a1b      	ldr	r3, [r3, #32]
 800046a:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800046e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000472:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] &=~(1<<11);
 8000474:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000478:	6a1b      	ldr	r3, [r3, #32]
 800047a:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800047e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000482:	6213      	str	r3, [r2, #32]

    /*************** Configure UART Module **************/
    /* Enable clock access to UART */
    RCC->APB1ENR1 |= UART2EN;
 8000484:	4b0b      	ldr	r3, [pc, #44]	; (80004b4 <uart2_tx_init+0xa0>)
 8000486:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000488:	4a0a      	ldr	r2, [pc, #40]	; (80004b4 <uart2_tx_init+0xa0>)
 800048a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800048e:	6593      	str	r3, [r2, #88]	; 0x58

    /* Configure UART Baud Rate */
    uart_set_baudrate(USART2, APB1_CLK,UART_BAUDRATE);
 8000490:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000494:	4908      	ldr	r1, [pc, #32]	; (80004b8 <uart2_tx_init+0xa4>)
 8000496:	4809      	ldr	r0, [pc, #36]	; (80004bc <uart2_tx_init+0xa8>)
 8000498:	f000 f82c 	bl	80004f4 <uart_set_baudrate>

    /* Configure the transfer direction */
    USART2->CR1 = CR1_TE;
 800049c:	4b07      	ldr	r3, [pc, #28]	; (80004bc <uart2_tx_init+0xa8>)
 800049e:	2208      	movs	r2, #8
 80004a0:	601a      	str	r2, [r3, #0]

    /* Enable UART Module */
    USART2->CR1 |= CR1_UE;
 80004a2:	4b06      	ldr	r3, [pc, #24]	; (80004bc <uart2_tx_init+0xa8>)
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	4a05      	ldr	r2, [pc, #20]	; (80004bc <uart2_tx_init+0xa8>)
 80004a8:	f043 0301 	orr.w	r3, r3, #1
 80004ac:	6013      	str	r3, [r2, #0]

}
 80004ae:	bf00      	nop
 80004b0:	bd80      	pop	{r7, pc}
 80004b2:	bf00      	nop
 80004b4:	40021000 	.word	0x40021000
 80004b8:	003d0900 	.word	0x003d0900
 80004bc:	40004400 	.word	0x40004400

080004c0 <uart2_write>:

void uart2_write(int ch){
 80004c0:	b480      	push	{r7}
 80004c2:	b083      	sub	sp, #12
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	6078      	str	r0, [r7, #4]
    /* Make sure transmit register is empty */
    while(!(USART2->ISR & SR_TXE)){}
 80004c8:	bf00      	nop
 80004ca:	4b09      	ldr	r3, [pc, #36]	; (80004f0 <uart2_write+0x30>)
 80004cc:	69db      	ldr	r3, [r3, #28]
 80004ce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80004d2:	2b00      	cmp	r3, #0
 80004d4:	d0f9      	beq.n	80004ca <uart2_write+0xa>

    /* Write to transmit data register */
    USART2->TDR = (ch & 0xFF);
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	b29a      	uxth	r2, r3
 80004da:	4b05      	ldr	r3, [pc, #20]	; (80004f0 <uart2_write+0x30>)
 80004dc:	b2d2      	uxtb	r2, r2
 80004de:	b292      	uxth	r2, r2
 80004e0:	851a      	strh	r2, [r3, #40]	; 0x28

}
 80004e2:	bf00      	nop
 80004e4:	370c      	adds	r7, #12
 80004e6:	46bd      	mov	sp, r7
 80004e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ec:	4770      	bx	lr
 80004ee:	bf00      	nop
 80004f0:	40004400 	.word	0x40004400

080004f4 <uart_set_baudrate>:

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate){
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b084      	sub	sp, #16
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	60f8      	str	r0, [r7, #12]
 80004fc:	60b9      	str	r1, [r7, #8]
 80004fe:	607a      	str	r2, [r7, #4]

    USARTx->BRR = compute_uart_bd(PeriphClk,BaudRate);
 8000500:	6879      	ldr	r1, [r7, #4]
 8000502:	68b8      	ldr	r0, [r7, #8]
 8000504:	f000 f808 	bl	8000518 <compute_uart_bd>
 8000508:	4603      	mov	r3, r0
 800050a:	461a      	mov	r2, r3
 800050c:	68fb      	ldr	r3, [r7, #12]
 800050e:	60da      	str	r2, [r3, #12]
}
 8000510:	bf00      	nop
 8000512:	3710      	adds	r7, #16
 8000514:	46bd      	mov	sp, r7
 8000516:	bd80      	pop	{r7, pc}

08000518 <compute_uart_bd>:


static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate){
 8000518:	b480      	push	{r7}
 800051a:	b083      	sub	sp, #12
 800051c:	af00      	add	r7, sp, #0
 800051e:	6078      	str	r0, [r7, #4]
 8000520:	6039      	str	r1, [r7, #0]

    return ((PeriphClk + (BaudRate/2U))/BaudRate);
 8000522:	683b      	ldr	r3, [r7, #0]
 8000524:	085a      	lsrs	r2, r3, #1
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	441a      	add	r2, r3
 800052a:	683b      	ldr	r3, [r7, #0]
 800052c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000530:	b29b      	uxth	r3, r3
}
 8000532:	4618      	mov	r0, r3
 8000534:	370c      	adds	r7, #12
 8000536:	46bd      	mov	sp, r7
 8000538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053c:	4770      	bx	lr
	...

08000540 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000540:	480d      	ldr	r0, [pc, #52]	; (8000578 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000542:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000544:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000548:	480c      	ldr	r0, [pc, #48]	; (800057c <LoopForever+0x6>)
  ldr r1, =_edata
 800054a:	490d      	ldr	r1, [pc, #52]	; (8000580 <LoopForever+0xa>)
  ldr r2, =_sidata
 800054c:	4a0d      	ldr	r2, [pc, #52]	; (8000584 <LoopForever+0xe>)
  movs r3, #0
 800054e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000550:	e002      	b.n	8000558 <LoopCopyDataInit>

08000552 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000552:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000554:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000556:	3304      	adds	r3, #4

08000558 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000558:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800055a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800055c:	d3f9      	bcc.n	8000552 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800055e:	4a0a      	ldr	r2, [pc, #40]	; (8000588 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000560:	4c0a      	ldr	r4, [pc, #40]	; (800058c <LoopForever+0x16>)
  movs r3, #0
 8000562:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000564:	e001      	b.n	800056a <LoopFillZerobss>

08000566 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000566:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000568:	3204      	adds	r2, #4

0800056a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800056a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800056c:	d3fb      	bcc.n	8000566 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800056e:	f000 f817 	bl	80005a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000572:	f7ff fe7d 	bl	8000270 <main>

08000576 <LoopForever>:

LoopForever:
    b LoopForever
 8000576:	e7fe      	b.n	8000576 <LoopForever>
  ldr   r0, =_estack
 8000578:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800057c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000580:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000584:	0800158c 	.word	0x0800158c
  ldr r2, =_sbss
 8000588:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800058c:	2000009c 	.word	0x2000009c

08000590 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000590:	e7fe      	b.n	8000590 <ADC1_2_IRQHandler>
	...

08000594 <__errno>:
 8000594:	4b01      	ldr	r3, [pc, #4]	; (800059c <__errno+0x8>)
 8000596:	6818      	ldr	r0, [r3, #0]
 8000598:	4770      	bx	lr
 800059a:	bf00      	nop
 800059c:	20000000 	.word	0x20000000

080005a0 <__libc_init_array>:
 80005a0:	b570      	push	{r4, r5, r6, lr}
 80005a2:	4d0d      	ldr	r5, [pc, #52]	; (80005d8 <__libc_init_array+0x38>)
 80005a4:	4c0d      	ldr	r4, [pc, #52]	; (80005dc <__libc_init_array+0x3c>)
 80005a6:	1b64      	subs	r4, r4, r5
 80005a8:	10a4      	asrs	r4, r4, #2
 80005aa:	2600      	movs	r6, #0
 80005ac:	42a6      	cmp	r6, r4
 80005ae:	d109      	bne.n	80005c4 <__libc_init_array+0x24>
 80005b0:	4d0b      	ldr	r5, [pc, #44]	; (80005e0 <__libc_init_array+0x40>)
 80005b2:	4c0c      	ldr	r4, [pc, #48]	; (80005e4 <__libc_init_array+0x44>)
 80005b4:	f000 ff76 	bl	80014a4 <_init>
 80005b8:	1b64      	subs	r4, r4, r5
 80005ba:	10a4      	asrs	r4, r4, #2
 80005bc:	2600      	movs	r6, #0
 80005be:	42a6      	cmp	r6, r4
 80005c0:	d105      	bne.n	80005ce <__libc_init_array+0x2e>
 80005c2:	bd70      	pop	{r4, r5, r6, pc}
 80005c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80005c8:	4798      	blx	r3
 80005ca:	3601      	adds	r6, #1
 80005cc:	e7ee      	b.n	80005ac <__libc_init_array+0xc>
 80005ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80005d2:	4798      	blx	r3
 80005d4:	3601      	adds	r6, #1
 80005d6:	e7f2      	b.n	80005be <__libc_init_array+0x1e>
 80005d8:	08001584 	.word	0x08001584
 80005dc:	08001584 	.word	0x08001584
 80005e0:	08001584 	.word	0x08001584
 80005e4:	08001588 	.word	0x08001588

080005e8 <memset>:
 80005e8:	4402      	add	r2, r0
 80005ea:	4603      	mov	r3, r0
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d100      	bne.n	80005f2 <memset+0xa>
 80005f0:	4770      	bx	lr
 80005f2:	f803 1b01 	strb.w	r1, [r3], #1
 80005f6:	e7f9      	b.n	80005ec <memset+0x4>

080005f8 <iprintf>:
 80005f8:	b40f      	push	{r0, r1, r2, r3}
 80005fa:	4b0a      	ldr	r3, [pc, #40]	; (8000624 <iprintf+0x2c>)
 80005fc:	b513      	push	{r0, r1, r4, lr}
 80005fe:	681c      	ldr	r4, [r3, #0]
 8000600:	b124      	cbz	r4, 800060c <iprintf+0x14>
 8000602:	69a3      	ldr	r3, [r4, #24]
 8000604:	b913      	cbnz	r3, 800060c <iprintf+0x14>
 8000606:	4620      	mov	r0, r4
 8000608:	f000 f866 	bl	80006d8 <__sinit>
 800060c:	ab05      	add	r3, sp, #20
 800060e:	9a04      	ldr	r2, [sp, #16]
 8000610:	68a1      	ldr	r1, [r4, #8]
 8000612:	9301      	str	r3, [sp, #4]
 8000614:	4620      	mov	r0, r4
 8000616:	f000 f983 	bl	8000920 <_vfiprintf_r>
 800061a:	b002      	add	sp, #8
 800061c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000620:	b004      	add	sp, #16
 8000622:	4770      	bx	lr
 8000624:	20000000 	.word	0x20000000

08000628 <std>:
 8000628:	2300      	movs	r3, #0
 800062a:	b510      	push	{r4, lr}
 800062c:	4604      	mov	r4, r0
 800062e:	e9c0 3300 	strd	r3, r3, [r0]
 8000632:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000636:	6083      	str	r3, [r0, #8]
 8000638:	8181      	strh	r1, [r0, #12]
 800063a:	6643      	str	r3, [r0, #100]	; 0x64
 800063c:	81c2      	strh	r2, [r0, #14]
 800063e:	6183      	str	r3, [r0, #24]
 8000640:	4619      	mov	r1, r3
 8000642:	2208      	movs	r2, #8
 8000644:	305c      	adds	r0, #92	; 0x5c
 8000646:	f7ff ffcf 	bl	80005e8 <memset>
 800064a:	4b05      	ldr	r3, [pc, #20]	; (8000660 <std+0x38>)
 800064c:	6263      	str	r3, [r4, #36]	; 0x24
 800064e:	4b05      	ldr	r3, [pc, #20]	; (8000664 <std+0x3c>)
 8000650:	62a3      	str	r3, [r4, #40]	; 0x28
 8000652:	4b05      	ldr	r3, [pc, #20]	; (8000668 <std+0x40>)
 8000654:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000656:	4b05      	ldr	r3, [pc, #20]	; (800066c <std+0x44>)
 8000658:	6224      	str	r4, [r4, #32]
 800065a:	6323      	str	r3, [r4, #48]	; 0x30
 800065c:	bd10      	pop	{r4, pc}
 800065e:	bf00      	nop
 8000660:	08000ec9 	.word	0x08000ec9
 8000664:	08000eeb 	.word	0x08000eeb
 8000668:	08000f23 	.word	0x08000f23
 800066c:	08000f47 	.word	0x08000f47

08000670 <_cleanup_r>:
 8000670:	4901      	ldr	r1, [pc, #4]	; (8000678 <_cleanup_r+0x8>)
 8000672:	f000 b8af 	b.w	80007d4 <_fwalk_reent>
 8000676:	bf00      	nop
 8000678:	08001221 	.word	0x08001221

0800067c <__sfmoreglue>:
 800067c:	b570      	push	{r4, r5, r6, lr}
 800067e:	1e4a      	subs	r2, r1, #1
 8000680:	2568      	movs	r5, #104	; 0x68
 8000682:	4355      	muls	r5, r2
 8000684:	460e      	mov	r6, r1
 8000686:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800068a:	f000 f8c5 	bl	8000818 <_malloc_r>
 800068e:	4604      	mov	r4, r0
 8000690:	b140      	cbz	r0, 80006a4 <__sfmoreglue+0x28>
 8000692:	2100      	movs	r1, #0
 8000694:	e9c0 1600 	strd	r1, r6, [r0]
 8000698:	300c      	adds	r0, #12
 800069a:	60a0      	str	r0, [r4, #8]
 800069c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80006a0:	f7ff ffa2 	bl	80005e8 <memset>
 80006a4:	4620      	mov	r0, r4
 80006a6:	bd70      	pop	{r4, r5, r6, pc}

080006a8 <__sfp_lock_acquire>:
 80006a8:	4801      	ldr	r0, [pc, #4]	; (80006b0 <__sfp_lock_acquire+0x8>)
 80006aa:	f000 b8b3 	b.w	8000814 <__retarget_lock_acquire_recursive>
 80006ae:	bf00      	nop
 80006b0:	20000094 	.word	0x20000094

080006b4 <__sfp_lock_release>:
 80006b4:	4801      	ldr	r0, [pc, #4]	; (80006bc <__sfp_lock_release+0x8>)
 80006b6:	f000 b8ae 	b.w	8000816 <__retarget_lock_release_recursive>
 80006ba:	bf00      	nop
 80006bc:	20000094 	.word	0x20000094

080006c0 <__sinit_lock_acquire>:
 80006c0:	4801      	ldr	r0, [pc, #4]	; (80006c8 <__sinit_lock_acquire+0x8>)
 80006c2:	f000 b8a7 	b.w	8000814 <__retarget_lock_acquire_recursive>
 80006c6:	bf00      	nop
 80006c8:	2000008f 	.word	0x2000008f

080006cc <__sinit_lock_release>:
 80006cc:	4801      	ldr	r0, [pc, #4]	; (80006d4 <__sinit_lock_release+0x8>)
 80006ce:	f000 b8a2 	b.w	8000816 <__retarget_lock_release_recursive>
 80006d2:	bf00      	nop
 80006d4:	2000008f 	.word	0x2000008f

080006d8 <__sinit>:
 80006d8:	b510      	push	{r4, lr}
 80006da:	4604      	mov	r4, r0
 80006dc:	f7ff fff0 	bl	80006c0 <__sinit_lock_acquire>
 80006e0:	69a3      	ldr	r3, [r4, #24]
 80006e2:	b11b      	cbz	r3, 80006ec <__sinit+0x14>
 80006e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006e8:	f7ff bff0 	b.w	80006cc <__sinit_lock_release>
 80006ec:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80006f0:	6523      	str	r3, [r4, #80]	; 0x50
 80006f2:	4b13      	ldr	r3, [pc, #76]	; (8000740 <__sinit+0x68>)
 80006f4:	4a13      	ldr	r2, [pc, #76]	; (8000744 <__sinit+0x6c>)
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	62a2      	str	r2, [r4, #40]	; 0x28
 80006fa:	42a3      	cmp	r3, r4
 80006fc:	bf04      	itt	eq
 80006fe:	2301      	moveq	r3, #1
 8000700:	61a3      	streq	r3, [r4, #24]
 8000702:	4620      	mov	r0, r4
 8000704:	f000 f820 	bl	8000748 <__sfp>
 8000708:	6060      	str	r0, [r4, #4]
 800070a:	4620      	mov	r0, r4
 800070c:	f000 f81c 	bl	8000748 <__sfp>
 8000710:	60a0      	str	r0, [r4, #8]
 8000712:	4620      	mov	r0, r4
 8000714:	f000 f818 	bl	8000748 <__sfp>
 8000718:	2200      	movs	r2, #0
 800071a:	60e0      	str	r0, [r4, #12]
 800071c:	2104      	movs	r1, #4
 800071e:	6860      	ldr	r0, [r4, #4]
 8000720:	f7ff ff82 	bl	8000628 <std>
 8000724:	68a0      	ldr	r0, [r4, #8]
 8000726:	2201      	movs	r2, #1
 8000728:	2109      	movs	r1, #9
 800072a:	f7ff ff7d 	bl	8000628 <std>
 800072e:	68e0      	ldr	r0, [r4, #12]
 8000730:	2202      	movs	r2, #2
 8000732:	2112      	movs	r1, #18
 8000734:	f7ff ff78 	bl	8000628 <std>
 8000738:	2301      	movs	r3, #1
 800073a:	61a3      	str	r3, [r4, #24]
 800073c:	e7d2      	b.n	80006e4 <__sinit+0xc>
 800073e:	bf00      	nop
 8000740:	080014ec 	.word	0x080014ec
 8000744:	08000671 	.word	0x08000671

08000748 <__sfp>:
 8000748:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800074a:	4607      	mov	r7, r0
 800074c:	f7ff ffac 	bl	80006a8 <__sfp_lock_acquire>
 8000750:	4b1e      	ldr	r3, [pc, #120]	; (80007cc <__sfp+0x84>)
 8000752:	681e      	ldr	r6, [r3, #0]
 8000754:	69b3      	ldr	r3, [r6, #24]
 8000756:	b913      	cbnz	r3, 800075e <__sfp+0x16>
 8000758:	4630      	mov	r0, r6
 800075a:	f7ff ffbd 	bl	80006d8 <__sinit>
 800075e:	3648      	adds	r6, #72	; 0x48
 8000760:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000764:	3b01      	subs	r3, #1
 8000766:	d503      	bpl.n	8000770 <__sfp+0x28>
 8000768:	6833      	ldr	r3, [r6, #0]
 800076a:	b30b      	cbz	r3, 80007b0 <__sfp+0x68>
 800076c:	6836      	ldr	r6, [r6, #0]
 800076e:	e7f7      	b.n	8000760 <__sfp+0x18>
 8000770:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000774:	b9d5      	cbnz	r5, 80007ac <__sfp+0x64>
 8000776:	4b16      	ldr	r3, [pc, #88]	; (80007d0 <__sfp+0x88>)
 8000778:	60e3      	str	r3, [r4, #12]
 800077a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800077e:	6665      	str	r5, [r4, #100]	; 0x64
 8000780:	f000 f847 	bl	8000812 <__retarget_lock_init_recursive>
 8000784:	f7ff ff96 	bl	80006b4 <__sfp_lock_release>
 8000788:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800078c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000790:	6025      	str	r5, [r4, #0]
 8000792:	61a5      	str	r5, [r4, #24]
 8000794:	2208      	movs	r2, #8
 8000796:	4629      	mov	r1, r5
 8000798:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800079c:	f7ff ff24 	bl	80005e8 <memset>
 80007a0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80007a4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80007a8:	4620      	mov	r0, r4
 80007aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007ac:	3468      	adds	r4, #104	; 0x68
 80007ae:	e7d9      	b.n	8000764 <__sfp+0x1c>
 80007b0:	2104      	movs	r1, #4
 80007b2:	4638      	mov	r0, r7
 80007b4:	f7ff ff62 	bl	800067c <__sfmoreglue>
 80007b8:	4604      	mov	r4, r0
 80007ba:	6030      	str	r0, [r6, #0]
 80007bc:	2800      	cmp	r0, #0
 80007be:	d1d5      	bne.n	800076c <__sfp+0x24>
 80007c0:	f7ff ff78 	bl	80006b4 <__sfp_lock_release>
 80007c4:	230c      	movs	r3, #12
 80007c6:	603b      	str	r3, [r7, #0]
 80007c8:	e7ee      	b.n	80007a8 <__sfp+0x60>
 80007ca:	bf00      	nop
 80007cc:	080014ec 	.word	0x080014ec
 80007d0:	ffff0001 	.word	0xffff0001

080007d4 <_fwalk_reent>:
 80007d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007d8:	4606      	mov	r6, r0
 80007da:	4688      	mov	r8, r1
 80007dc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80007e0:	2700      	movs	r7, #0
 80007e2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80007e6:	f1b9 0901 	subs.w	r9, r9, #1
 80007ea:	d505      	bpl.n	80007f8 <_fwalk_reent+0x24>
 80007ec:	6824      	ldr	r4, [r4, #0]
 80007ee:	2c00      	cmp	r4, #0
 80007f0:	d1f7      	bne.n	80007e2 <_fwalk_reent+0xe>
 80007f2:	4638      	mov	r0, r7
 80007f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007f8:	89ab      	ldrh	r3, [r5, #12]
 80007fa:	2b01      	cmp	r3, #1
 80007fc:	d907      	bls.n	800080e <_fwalk_reent+0x3a>
 80007fe:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000802:	3301      	adds	r3, #1
 8000804:	d003      	beq.n	800080e <_fwalk_reent+0x3a>
 8000806:	4629      	mov	r1, r5
 8000808:	4630      	mov	r0, r6
 800080a:	47c0      	blx	r8
 800080c:	4307      	orrs	r7, r0
 800080e:	3568      	adds	r5, #104	; 0x68
 8000810:	e7e9      	b.n	80007e6 <_fwalk_reent+0x12>

08000812 <__retarget_lock_init_recursive>:
 8000812:	4770      	bx	lr

08000814 <__retarget_lock_acquire_recursive>:
 8000814:	4770      	bx	lr

08000816 <__retarget_lock_release_recursive>:
 8000816:	4770      	bx	lr

08000818 <_malloc_r>:
 8000818:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800081a:	1ccd      	adds	r5, r1, #3
 800081c:	f025 0503 	bic.w	r5, r5, #3
 8000820:	3508      	adds	r5, #8
 8000822:	2d0c      	cmp	r5, #12
 8000824:	bf38      	it	cc
 8000826:	250c      	movcc	r5, #12
 8000828:	2d00      	cmp	r5, #0
 800082a:	4606      	mov	r6, r0
 800082c:	db01      	blt.n	8000832 <_malloc_r+0x1a>
 800082e:	42a9      	cmp	r1, r5
 8000830:	d903      	bls.n	800083a <_malloc_r+0x22>
 8000832:	230c      	movs	r3, #12
 8000834:	6033      	str	r3, [r6, #0]
 8000836:	2000      	movs	r0, #0
 8000838:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800083a:	f000 fda3 	bl	8001384 <__malloc_lock>
 800083e:	4921      	ldr	r1, [pc, #132]	; (80008c4 <_malloc_r+0xac>)
 8000840:	680a      	ldr	r2, [r1, #0]
 8000842:	4614      	mov	r4, r2
 8000844:	b99c      	cbnz	r4, 800086e <_malloc_r+0x56>
 8000846:	4f20      	ldr	r7, [pc, #128]	; (80008c8 <_malloc_r+0xb0>)
 8000848:	683b      	ldr	r3, [r7, #0]
 800084a:	b923      	cbnz	r3, 8000856 <_malloc_r+0x3e>
 800084c:	4621      	mov	r1, r4
 800084e:	4630      	mov	r0, r6
 8000850:	f000 fb2a 	bl	8000ea8 <_sbrk_r>
 8000854:	6038      	str	r0, [r7, #0]
 8000856:	4629      	mov	r1, r5
 8000858:	4630      	mov	r0, r6
 800085a:	f000 fb25 	bl	8000ea8 <_sbrk_r>
 800085e:	1c43      	adds	r3, r0, #1
 8000860:	d123      	bne.n	80008aa <_malloc_r+0x92>
 8000862:	230c      	movs	r3, #12
 8000864:	6033      	str	r3, [r6, #0]
 8000866:	4630      	mov	r0, r6
 8000868:	f000 fd92 	bl	8001390 <__malloc_unlock>
 800086c:	e7e3      	b.n	8000836 <_malloc_r+0x1e>
 800086e:	6823      	ldr	r3, [r4, #0]
 8000870:	1b5b      	subs	r3, r3, r5
 8000872:	d417      	bmi.n	80008a4 <_malloc_r+0x8c>
 8000874:	2b0b      	cmp	r3, #11
 8000876:	d903      	bls.n	8000880 <_malloc_r+0x68>
 8000878:	6023      	str	r3, [r4, #0]
 800087a:	441c      	add	r4, r3
 800087c:	6025      	str	r5, [r4, #0]
 800087e:	e004      	b.n	800088a <_malloc_r+0x72>
 8000880:	6863      	ldr	r3, [r4, #4]
 8000882:	42a2      	cmp	r2, r4
 8000884:	bf0c      	ite	eq
 8000886:	600b      	streq	r3, [r1, #0]
 8000888:	6053      	strne	r3, [r2, #4]
 800088a:	4630      	mov	r0, r6
 800088c:	f000 fd80 	bl	8001390 <__malloc_unlock>
 8000890:	f104 000b 	add.w	r0, r4, #11
 8000894:	1d23      	adds	r3, r4, #4
 8000896:	f020 0007 	bic.w	r0, r0, #7
 800089a:	1ac2      	subs	r2, r0, r3
 800089c:	d0cc      	beq.n	8000838 <_malloc_r+0x20>
 800089e:	1a1b      	subs	r3, r3, r0
 80008a0:	50a3      	str	r3, [r4, r2]
 80008a2:	e7c9      	b.n	8000838 <_malloc_r+0x20>
 80008a4:	4622      	mov	r2, r4
 80008a6:	6864      	ldr	r4, [r4, #4]
 80008a8:	e7cc      	b.n	8000844 <_malloc_r+0x2c>
 80008aa:	1cc4      	adds	r4, r0, #3
 80008ac:	f024 0403 	bic.w	r4, r4, #3
 80008b0:	42a0      	cmp	r0, r4
 80008b2:	d0e3      	beq.n	800087c <_malloc_r+0x64>
 80008b4:	1a21      	subs	r1, r4, r0
 80008b6:	4630      	mov	r0, r6
 80008b8:	f000 faf6 	bl	8000ea8 <_sbrk_r>
 80008bc:	3001      	adds	r0, #1
 80008be:	d1dd      	bne.n	800087c <_malloc_r+0x64>
 80008c0:	e7cf      	b.n	8000862 <_malloc_r+0x4a>
 80008c2:	bf00      	nop
 80008c4:	20000084 	.word	0x20000084
 80008c8:	20000088 	.word	0x20000088

080008cc <__sfputc_r>:
 80008cc:	6893      	ldr	r3, [r2, #8]
 80008ce:	3b01      	subs	r3, #1
 80008d0:	2b00      	cmp	r3, #0
 80008d2:	b410      	push	{r4}
 80008d4:	6093      	str	r3, [r2, #8]
 80008d6:	da08      	bge.n	80008ea <__sfputc_r+0x1e>
 80008d8:	6994      	ldr	r4, [r2, #24]
 80008da:	42a3      	cmp	r3, r4
 80008dc:	db01      	blt.n	80008e2 <__sfputc_r+0x16>
 80008de:	290a      	cmp	r1, #10
 80008e0:	d103      	bne.n	80008ea <__sfputc_r+0x1e>
 80008e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008e6:	f000 bb33 	b.w	8000f50 <__swbuf_r>
 80008ea:	6813      	ldr	r3, [r2, #0]
 80008ec:	1c58      	adds	r0, r3, #1
 80008ee:	6010      	str	r0, [r2, #0]
 80008f0:	7019      	strb	r1, [r3, #0]
 80008f2:	4608      	mov	r0, r1
 80008f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008f8:	4770      	bx	lr

080008fa <__sfputs_r>:
 80008fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008fc:	4606      	mov	r6, r0
 80008fe:	460f      	mov	r7, r1
 8000900:	4614      	mov	r4, r2
 8000902:	18d5      	adds	r5, r2, r3
 8000904:	42ac      	cmp	r4, r5
 8000906:	d101      	bne.n	800090c <__sfputs_r+0x12>
 8000908:	2000      	movs	r0, #0
 800090a:	e007      	b.n	800091c <__sfputs_r+0x22>
 800090c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000910:	463a      	mov	r2, r7
 8000912:	4630      	mov	r0, r6
 8000914:	f7ff ffda 	bl	80008cc <__sfputc_r>
 8000918:	1c43      	adds	r3, r0, #1
 800091a:	d1f3      	bne.n	8000904 <__sfputs_r+0xa>
 800091c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000920 <_vfiprintf_r>:
 8000920:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000924:	460d      	mov	r5, r1
 8000926:	b09d      	sub	sp, #116	; 0x74
 8000928:	4614      	mov	r4, r2
 800092a:	4698      	mov	r8, r3
 800092c:	4606      	mov	r6, r0
 800092e:	b118      	cbz	r0, 8000938 <_vfiprintf_r+0x18>
 8000930:	6983      	ldr	r3, [r0, #24]
 8000932:	b90b      	cbnz	r3, 8000938 <_vfiprintf_r+0x18>
 8000934:	f7ff fed0 	bl	80006d8 <__sinit>
 8000938:	4b89      	ldr	r3, [pc, #548]	; (8000b60 <_vfiprintf_r+0x240>)
 800093a:	429d      	cmp	r5, r3
 800093c:	d11b      	bne.n	8000976 <_vfiprintf_r+0x56>
 800093e:	6875      	ldr	r5, [r6, #4]
 8000940:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000942:	07d9      	lsls	r1, r3, #31
 8000944:	d405      	bmi.n	8000952 <_vfiprintf_r+0x32>
 8000946:	89ab      	ldrh	r3, [r5, #12]
 8000948:	059a      	lsls	r2, r3, #22
 800094a:	d402      	bmi.n	8000952 <_vfiprintf_r+0x32>
 800094c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800094e:	f7ff ff61 	bl	8000814 <__retarget_lock_acquire_recursive>
 8000952:	89ab      	ldrh	r3, [r5, #12]
 8000954:	071b      	lsls	r3, r3, #28
 8000956:	d501      	bpl.n	800095c <_vfiprintf_r+0x3c>
 8000958:	692b      	ldr	r3, [r5, #16]
 800095a:	b9eb      	cbnz	r3, 8000998 <_vfiprintf_r+0x78>
 800095c:	4629      	mov	r1, r5
 800095e:	4630      	mov	r0, r6
 8000960:	f000 fb5a 	bl	8001018 <__swsetup_r>
 8000964:	b1c0      	cbz	r0, 8000998 <_vfiprintf_r+0x78>
 8000966:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000968:	07dc      	lsls	r4, r3, #31
 800096a:	d50e      	bpl.n	800098a <_vfiprintf_r+0x6a>
 800096c:	f04f 30ff 	mov.w	r0, #4294967295
 8000970:	b01d      	add	sp, #116	; 0x74
 8000972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000976:	4b7b      	ldr	r3, [pc, #492]	; (8000b64 <_vfiprintf_r+0x244>)
 8000978:	429d      	cmp	r5, r3
 800097a:	d101      	bne.n	8000980 <_vfiprintf_r+0x60>
 800097c:	68b5      	ldr	r5, [r6, #8]
 800097e:	e7df      	b.n	8000940 <_vfiprintf_r+0x20>
 8000980:	4b79      	ldr	r3, [pc, #484]	; (8000b68 <_vfiprintf_r+0x248>)
 8000982:	429d      	cmp	r5, r3
 8000984:	bf08      	it	eq
 8000986:	68f5      	ldreq	r5, [r6, #12]
 8000988:	e7da      	b.n	8000940 <_vfiprintf_r+0x20>
 800098a:	89ab      	ldrh	r3, [r5, #12]
 800098c:	0598      	lsls	r0, r3, #22
 800098e:	d4ed      	bmi.n	800096c <_vfiprintf_r+0x4c>
 8000990:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000992:	f7ff ff40 	bl	8000816 <__retarget_lock_release_recursive>
 8000996:	e7e9      	b.n	800096c <_vfiprintf_r+0x4c>
 8000998:	2300      	movs	r3, #0
 800099a:	9309      	str	r3, [sp, #36]	; 0x24
 800099c:	2320      	movs	r3, #32
 800099e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80009a2:	f8cd 800c 	str.w	r8, [sp, #12]
 80009a6:	2330      	movs	r3, #48	; 0x30
 80009a8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000b6c <_vfiprintf_r+0x24c>
 80009ac:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80009b0:	f04f 0901 	mov.w	r9, #1
 80009b4:	4623      	mov	r3, r4
 80009b6:	469a      	mov	sl, r3
 80009b8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80009bc:	b10a      	cbz	r2, 80009c2 <_vfiprintf_r+0xa2>
 80009be:	2a25      	cmp	r2, #37	; 0x25
 80009c0:	d1f9      	bne.n	80009b6 <_vfiprintf_r+0x96>
 80009c2:	ebba 0b04 	subs.w	fp, sl, r4
 80009c6:	d00b      	beq.n	80009e0 <_vfiprintf_r+0xc0>
 80009c8:	465b      	mov	r3, fp
 80009ca:	4622      	mov	r2, r4
 80009cc:	4629      	mov	r1, r5
 80009ce:	4630      	mov	r0, r6
 80009d0:	f7ff ff93 	bl	80008fa <__sfputs_r>
 80009d4:	3001      	adds	r0, #1
 80009d6:	f000 80aa 	beq.w	8000b2e <_vfiprintf_r+0x20e>
 80009da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80009dc:	445a      	add	r2, fp
 80009de:	9209      	str	r2, [sp, #36]	; 0x24
 80009e0:	f89a 3000 	ldrb.w	r3, [sl]
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	f000 80a2 	beq.w	8000b2e <_vfiprintf_r+0x20e>
 80009ea:	2300      	movs	r3, #0
 80009ec:	f04f 32ff 	mov.w	r2, #4294967295
 80009f0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80009f4:	f10a 0a01 	add.w	sl, sl, #1
 80009f8:	9304      	str	r3, [sp, #16]
 80009fa:	9307      	str	r3, [sp, #28]
 80009fc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a00:	931a      	str	r3, [sp, #104]	; 0x68
 8000a02:	4654      	mov	r4, sl
 8000a04:	2205      	movs	r2, #5
 8000a06:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a0a:	4858      	ldr	r0, [pc, #352]	; (8000b6c <_vfiprintf_r+0x24c>)
 8000a0c:	f7ff fbe0 	bl	80001d0 <memchr>
 8000a10:	9a04      	ldr	r2, [sp, #16]
 8000a12:	b9d8      	cbnz	r0, 8000a4c <_vfiprintf_r+0x12c>
 8000a14:	06d1      	lsls	r1, r2, #27
 8000a16:	bf44      	itt	mi
 8000a18:	2320      	movmi	r3, #32
 8000a1a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a1e:	0713      	lsls	r3, r2, #28
 8000a20:	bf44      	itt	mi
 8000a22:	232b      	movmi	r3, #43	; 0x2b
 8000a24:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a28:	f89a 3000 	ldrb.w	r3, [sl]
 8000a2c:	2b2a      	cmp	r3, #42	; 0x2a
 8000a2e:	d015      	beq.n	8000a5c <_vfiprintf_r+0x13c>
 8000a30:	9a07      	ldr	r2, [sp, #28]
 8000a32:	4654      	mov	r4, sl
 8000a34:	2000      	movs	r0, #0
 8000a36:	f04f 0c0a 	mov.w	ip, #10
 8000a3a:	4621      	mov	r1, r4
 8000a3c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a40:	3b30      	subs	r3, #48	; 0x30
 8000a42:	2b09      	cmp	r3, #9
 8000a44:	d94e      	bls.n	8000ae4 <_vfiprintf_r+0x1c4>
 8000a46:	b1b0      	cbz	r0, 8000a76 <_vfiprintf_r+0x156>
 8000a48:	9207      	str	r2, [sp, #28]
 8000a4a:	e014      	b.n	8000a76 <_vfiprintf_r+0x156>
 8000a4c:	eba0 0308 	sub.w	r3, r0, r8
 8000a50:	fa09 f303 	lsl.w	r3, r9, r3
 8000a54:	4313      	orrs	r3, r2
 8000a56:	9304      	str	r3, [sp, #16]
 8000a58:	46a2      	mov	sl, r4
 8000a5a:	e7d2      	b.n	8000a02 <_vfiprintf_r+0xe2>
 8000a5c:	9b03      	ldr	r3, [sp, #12]
 8000a5e:	1d19      	adds	r1, r3, #4
 8000a60:	681b      	ldr	r3, [r3, #0]
 8000a62:	9103      	str	r1, [sp, #12]
 8000a64:	2b00      	cmp	r3, #0
 8000a66:	bfbb      	ittet	lt
 8000a68:	425b      	neglt	r3, r3
 8000a6a:	f042 0202 	orrlt.w	r2, r2, #2
 8000a6e:	9307      	strge	r3, [sp, #28]
 8000a70:	9307      	strlt	r3, [sp, #28]
 8000a72:	bfb8      	it	lt
 8000a74:	9204      	strlt	r2, [sp, #16]
 8000a76:	7823      	ldrb	r3, [r4, #0]
 8000a78:	2b2e      	cmp	r3, #46	; 0x2e
 8000a7a:	d10c      	bne.n	8000a96 <_vfiprintf_r+0x176>
 8000a7c:	7863      	ldrb	r3, [r4, #1]
 8000a7e:	2b2a      	cmp	r3, #42	; 0x2a
 8000a80:	d135      	bne.n	8000aee <_vfiprintf_r+0x1ce>
 8000a82:	9b03      	ldr	r3, [sp, #12]
 8000a84:	1d1a      	adds	r2, r3, #4
 8000a86:	681b      	ldr	r3, [r3, #0]
 8000a88:	9203      	str	r2, [sp, #12]
 8000a8a:	2b00      	cmp	r3, #0
 8000a8c:	bfb8      	it	lt
 8000a8e:	f04f 33ff 	movlt.w	r3, #4294967295
 8000a92:	3402      	adds	r4, #2
 8000a94:	9305      	str	r3, [sp, #20]
 8000a96:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000b7c <_vfiprintf_r+0x25c>
 8000a9a:	7821      	ldrb	r1, [r4, #0]
 8000a9c:	2203      	movs	r2, #3
 8000a9e:	4650      	mov	r0, sl
 8000aa0:	f7ff fb96 	bl	80001d0 <memchr>
 8000aa4:	b140      	cbz	r0, 8000ab8 <_vfiprintf_r+0x198>
 8000aa6:	2340      	movs	r3, #64	; 0x40
 8000aa8:	eba0 000a 	sub.w	r0, r0, sl
 8000aac:	fa03 f000 	lsl.w	r0, r3, r0
 8000ab0:	9b04      	ldr	r3, [sp, #16]
 8000ab2:	4303      	orrs	r3, r0
 8000ab4:	3401      	adds	r4, #1
 8000ab6:	9304      	str	r3, [sp, #16]
 8000ab8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000abc:	482c      	ldr	r0, [pc, #176]	; (8000b70 <_vfiprintf_r+0x250>)
 8000abe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000ac2:	2206      	movs	r2, #6
 8000ac4:	f7ff fb84 	bl	80001d0 <memchr>
 8000ac8:	2800      	cmp	r0, #0
 8000aca:	d03f      	beq.n	8000b4c <_vfiprintf_r+0x22c>
 8000acc:	4b29      	ldr	r3, [pc, #164]	; (8000b74 <_vfiprintf_r+0x254>)
 8000ace:	bb1b      	cbnz	r3, 8000b18 <_vfiprintf_r+0x1f8>
 8000ad0:	9b03      	ldr	r3, [sp, #12]
 8000ad2:	3307      	adds	r3, #7
 8000ad4:	f023 0307 	bic.w	r3, r3, #7
 8000ad8:	3308      	adds	r3, #8
 8000ada:	9303      	str	r3, [sp, #12]
 8000adc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ade:	443b      	add	r3, r7
 8000ae0:	9309      	str	r3, [sp, #36]	; 0x24
 8000ae2:	e767      	b.n	80009b4 <_vfiprintf_r+0x94>
 8000ae4:	fb0c 3202 	mla	r2, ip, r2, r3
 8000ae8:	460c      	mov	r4, r1
 8000aea:	2001      	movs	r0, #1
 8000aec:	e7a5      	b.n	8000a3a <_vfiprintf_r+0x11a>
 8000aee:	2300      	movs	r3, #0
 8000af0:	3401      	adds	r4, #1
 8000af2:	9305      	str	r3, [sp, #20]
 8000af4:	4619      	mov	r1, r3
 8000af6:	f04f 0c0a 	mov.w	ip, #10
 8000afa:	4620      	mov	r0, r4
 8000afc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b00:	3a30      	subs	r2, #48	; 0x30
 8000b02:	2a09      	cmp	r2, #9
 8000b04:	d903      	bls.n	8000b0e <_vfiprintf_r+0x1ee>
 8000b06:	2b00      	cmp	r3, #0
 8000b08:	d0c5      	beq.n	8000a96 <_vfiprintf_r+0x176>
 8000b0a:	9105      	str	r1, [sp, #20]
 8000b0c:	e7c3      	b.n	8000a96 <_vfiprintf_r+0x176>
 8000b0e:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b12:	4604      	mov	r4, r0
 8000b14:	2301      	movs	r3, #1
 8000b16:	e7f0      	b.n	8000afa <_vfiprintf_r+0x1da>
 8000b18:	ab03      	add	r3, sp, #12
 8000b1a:	9300      	str	r3, [sp, #0]
 8000b1c:	462a      	mov	r2, r5
 8000b1e:	4b16      	ldr	r3, [pc, #88]	; (8000b78 <_vfiprintf_r+0x258>)
 8000b20:	a904      	add	r1, sp, #16
 8000b22:	4630      	mov	r0, r6
 8000b24:	f3af 8000 	nop.w
 8000b28:	4607      	mov	r7, r0
 8000b2a:	1c78      	adds	r0, r7, #1
 8000b2c:	d1d6      	bne.n	8000adc <_vfiprintf_r+0x1bc>
 8000b2e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b30:	07d9      	lsls	r1, r3, #31
 8000b32:	d405      	bmi.n	8000b40 <_vfiprintf_r+0x220>
 8000b34:	89ab      	ldrh	r3, [r5, #12]
 8000b36:	059a      	lsls	r2, r3, #22
 8000b38:	d402      	bmi.n	8000b40 <_vfiprintf_r+0x220>
 8000b3a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b3c:	f7ff fe6b 	bl	8000816 <__retarget_lock_release_recursive>
 8000b40:	89ab      	ldrh	r3, [r5, #12]
 8000b42:	065b      	lsls	r3, r3, #25
 8000b44:	f53f af12 	bmi.w	800096c <_vfiprintf_r+0x4c>
 8000b48:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b4a:	e711      	b.n	8000970 <_vfiprintf_r+0x50>
 8000b4c:	ab03      	add	r3, sp, #12
 8000b4e:	9300      	str	r3, [sp, #0]
 8000b50:	462a      	mov	r2, r5
 8000b52:	4b09      	ldr	r3, [pc, #36]	; (8000b78 <_vfiprintf_r+0x258>)
 8000b54:	a904      	add	r1, sp, #16
 8000b56:	4630      	mov	r0, r6
 8000b58:	f000 f880 	bl	8000c5c <_printf_i>
 8000b5c:	e7e4      	b.n	8000b28 <_vfiprintf_r+0x208>
 8000b5e:	bf00      	nop
 8000b60:	08001510 	.word	0x08001510
 8000b64:	08001530 	.word	0x08001530
 8000b68:	080014f0 	.word	0x080014f0
 8000b6c:	08001550 	.word	0x08001550
 8000b70:	0800155a 	.word	0x0800155a
 8000b74:	00000000 	.word	0x00000000
 8000b78:	080008fb 	.word	0x080008fb
 8000b7c:	08001556 	.word	0x08001556

08000b80 <_printf_common>:
 8000b80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b84:	4616      	mov	r6, r2
 8000b86:	4699      	mov	r9, r3
 8000b88:	688a      	ldr	r2, [r1, #8]
 8000b8a:	690b      	ldr	r3, [r1, #16]
 8000b8c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b90:	4293      	cmp	r3, r2
 8000b92:	bfb8      	it	lt
 8000b94:	4613      	movlt	r3, r2
 8000b96:	6033      	str	r3, [r6, #0]
 8000b98:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b9c:	4607      	mov	r7, r0
 8000b9e:	460c      	mov	r4, r1
 8000ba0:	b10a      	cbz	r2, 8000ba6 <_printf_common+0x26>
 8000ba2:	3301      	adds	r3, #1
 8000ba4:	6033      	str	r3, [r6, #0]
 8000ba6:	6823      	ldr	r3, [r4, #0]
 8000ba8:	0699      	lsls	r1, r3, #26
 8000baa:	bf42      	ittt	mi
 8000bac:	6833      	ldrmi	r3, [r6, #0]
 8000bae:	3302      	addmi	r3, #2
 8000bb0:	6033      	strmi	r3, [r6, #0]
 8000bb2:	6825      	ldr	r5, [r4, #0]
 8000bb4:	f015 0506 	ands.w	r5, r5, #6
 8000bb8:	d106      	bne.n	8000bc8 <_printf_common+0x48>
 8000bba:	f104 0a19 	add.w	sl, r4, #25
 8000bbe:	68e3      	ldr	r3, [r4, #12]
 8000bc0:	6832      	ldr	r2, [r6, #0]
 8000bc2:	1a9b      	subs	r3, r3, r2
 8000bc4:	42ab      	cmp	r3, r5
 8000bc6:	dc26      	bgt.n	8000c16 <_printf_common+0x96>
 8000bc8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000bcc:	1e13      	subs	r3, r2, #0
 8000bce:	6822      	ldr	r2, [r4, #0]
 8000bd0:	bf18      	it	ne
 8000bd2:	2301      	movne	r3, #1
 8000bd4:	0692      	lsls	r2, r2, #26
 8000bd6:	d42b      	bmi.n	8000c30 <_printf_common+0xb0>
 8000bd8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000bdc:	4649      	mov	r1, r9
 8000bde:	4638      	mov	r0, r7
 8000be0:	47c0      	blx	r8
 8000be2:	3001      	adds	r0, #1
 8000be4:	d01e      	beq.n	8000c24 <_printf_common+0xa4>
 8000be6:	6823      	ldr	r3, [r4, #0]
 8000be8:	68e5      	ldr	r5, [r4, #12]
 8000bea:	6832      	ldr	r2, [r6, #0]
 8000bec:	f003 0306 	and.w	r3, r3, #6
 8000bf0:	2b04      	cmp	r3, #4
 8000bf2:	bf08      	it	eq
 8000bf4:	1aad      	subeq	r5, r5, r2
 8000bf6:	68a3      	ldr	r3, [r4, #8]
 8000bf8:	6922      	ldr	r2, [r4, #16]
 8000bfa:	bf0c      	ite	eq
 8000bfc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c00:	2500      	movne	r5, #0
 8000c02:	4293      	cmp	r3, r2
 8000c04:	bfc4      	itt	gt
 8000c06:	1a9b      	subgt	r3, r3, r2
 8000c08:	18ed      	addgt	r5, r5, r3
 8000c0a:	2600      	movs	r6, #0
 8000c0c:	341a      	adds	r4, #26
 8000c0e:	42b5      	cmp	r5, r6
 8000c10:	d11a      	bne.n	8000c48 <_printf_common+0xc8>
 8000c12:	2000      	movs	r0, #0
 8000c14:	e008      	b.n	8000c28 <_printf_common+0xa8>
 8000c16:	2301      	movs	r3, #1
 8000c18:	4652      	mov	r2, sl
 8000c1a:	4649      	mov	r1, r9
 8000c1c:	4638      	mov	r0, r7
 8000c1e:	47c0      	blx	r8
 8000c20:	3001      	adds	r0, #1
 8000c22:	d103      	bne.n	8000c2c <_printf_common+0xac>
 8000c24:	f04f 30ff 	mov.w	r0, #4294967295
 8000c28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c2c:	3501      	adds	r5, #1
 8000c2e:	e7c6      	b.n	8000bbe <_printf_common+0x3e>
 8000c30:	18e1      	adds	r1, r4, r3
 8000c32:	1c5a      	adds	r2, r3, #1
 8000c34:	2030      	movs	r0, #48	; 0x30
 8000c36:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c3a:	4422      	add	r2, r4
 8000c3c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c40:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c44:	3302      	adds	r3, #2
 8000c46:	e7c7      	b.n	8000bd8 <_printf_common+0x58>
 8000c48:	2301      	movs	r3, #1
 8000c4a:	4622      	mov	r2, r4
 8000c4c:	4649      	mov	r1, r9
 8000c4e:	4638      	mov	r0, r7
 8000c50:	47c0      	blx	r8
 8000c52:	3001      	adds	r0, #1
 8000c54:	d0e6      	beq.n	8000c24 <_printf_common+0xa4>
 8000c56:	3601      	adds	r6, #1
 8000c58:	e7d9      	b.n	8000c0e <_printf_common+0x8e>
	...

08000c5c <_printf_i>:
 8000c5c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c60:	460c      	mov	r4, r1
 8000c62:	4691      	mov	r9, r2
 8000c64:	7e27      	ldrb	r7, [r4, #24]
 8000c66:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000c68:	2f78      	cmp	r7, #120	; 0x78
 8000c6a:	4680      	mov	r8, r0
 8000c6c:	469a      	mov	sl, r3
 8000c6e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c72:	d807      	bhi.n	8000c84 <_printf_i+0x28>
 8000c74:	2f62      	cmp	r7, #98	; 0x62
 8000c76:	d80a      	bhi.n	8000c8e <_printf_i+0x32>
 8000c78:	2f00      	cmp	r7, #0
 8000c7a:	f000 80d8 	beq.w	8000e2e <_printf_i+0x1d2>
 8000c7e:	2f58      	cmp	r7, #88	; 0x58
 8000c80:	f000 80a3 	beq.w	8000dca <_printf_i+0x16e>
 8000c84:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000c88:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000c8c:	e03a      	b.n	8000d04 <_printf_i+0xa8>
 8000c8e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000c92:	2b15      	cmp	r3, #21
 8000c94:	d8f6      	bhi.n	8000c84 <_printf_i+0x28>
 8000c96:	a001      	add	r0, pc, #4	; (adr r0, 8000c9c <_printf_i+0x40>)
 8000c98:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000c9c:	08000cf5 	.word	0x08000cf5
 8000ca0:	08000d09 	.word	0x08000d09
 8000ca4:	08000c85 	.word	0x08000c85
 8000ca8:	08000c85 	.word	0x08000c85
 8000cac:	08000c85 	.word	0x08000c85
 8000cb0:	08000c85 	.word	0x08000c85
 8000cb4:	08000d09 	.word	0x08000d09
 8000cb8:	08000c85 	.word	0x08000c85
 8000cbc:	08000c85 	.word	0x08000c85
 8000cc0:	08000c85 	.word	0x08000c85
 8000cc4:	08000c85 	.word	0x08000c85
 8000cc8:	08000e15 	.word	0x08000e15
 8000ccc:	08000d39 	.word	0x08000d39
 8000cd0:	08000df7 	.word	0x08000df7
 8000cd4:	08000c85 	.word	0x08000c85
 8000cd8:	08000c85 	.word	0x08000c85
 8000cdc:	08000e37 	.word	0x08000e37
 8000ce0:	08000c85 	.word	0x08000c85
 8000ce4:	08000d39 	.word	0x08000d39
 8000ce8:	08000c85 	.word	0x08000c85
 8000cec:	08000c85 	.word	0x08000c85
 8000cf0:	08000dff 	.word	0x08000dff
 8000cf4:	680b      	ldr	r3, [r1, #0]
 8000cf6:	1d1a      	adds	r2, r3, #4
 8000cf8:	681b      	ldr	r3, [r3, #0]
 8000cfa:	600a      	str	r2, [r1, #0]
 8000cfc:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000d00:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d04:	2301      	movs	r3, #1
 8000d06:	e0a3      	b.n	8000e50 <_printf_i+0x1f4>
 8000d08:	6825      	ldr	r5, [r4, #0]
 8000d0a:	6808      	ldr	r0, [r1, #0]
 8000d0c:	062e      	lsls	r6, r5, #24
 8000d0e:	f100 0304 	add.w	r3, r0, #4
 8000d12:	d50a      	bpl.n	8000d2a <_printf_i+0xce>
 8000d14:	6805      	ldr	r5, [r0, #0]
 8000d16:	600b      	str	r3, [r1, #0]
 8000d18:	2d00      	cmp	r5, #0
 8000d1a:	da03      	bge.n	8000d24 <_printf_i+0xc8>
 8000d1c:	232d      	movs	r3, #45	; 0x2d
 8000d1e:	426d      	negs	r5, r5
 8000d20:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d24:	485e      	ldr	r0, [pc, #376]	; (8000ea0 <_printf_i+0x244>)
 8000d26:	230a      	movs	r3, #10
 8000d28:	e019      	b.n	8000d5e <_printf_i+0x102>
 8000d2a:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000d2e:	6805      	ldr	r5, [r0, #0]
 8000d30:	600b      	str	r3, [r1, #0]
 8000d32:	bf18      	it	ne
 8000d34:	b22d      	sxthne	r5, r5
 8000d36:	e7ef      	b.n	8000d18 <_printf_i+0xbc>
 8000d38:	680b      	ldr	r3, [r1, #0]
 8000d3a:	6825      	ldr	r5, [r4, #0]
 8000d3c:	1d18      	adds	r0, r3, #4
 8000d3e:	6008      	str	r0, [r1, #0]
 8000d40:	0628      	lsls	r0, r5, #24
 8000d42:	d501      	bpl.n	8000d48 <_printf_i+0xec>
 8000d44:	681d      	ldr	r5, [r3, #0]
 8000d46:	e002      	b.n	8000d4e <_printf_i+0xf2>
 8000d48:	0669      	lsls	r1, r5, #25
 8000d4a:	d5fb      	bpl.n	8000d44 <_printf_i+0xe8>
 8000d4c:	881d      	ldrh	r5, [r3, #0]
 8000d4e:	4854      	ldr	r0, [pc, #336]	; (8000ea0 <_printf_i+0x244>)
 8000d50:	2f6f      	cmp	r7, #111	; 0x6f
 8000d52:	bf0c      	ite	eq
 8000d54:	2308      	moveq	r3, #8
 8000d56:	230a      	movne	r3, #10
 8000d58:	2100      	movs	r1, #0
 8000d5a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d5e:	6866      	ldr	r6, [r4, #4]
 8000d60:	60a6      	str	r6, [r4, #8]
 8000d62:	2e00      	cmp	r6, #0
 8000d64:	bfa2      	ittt	ge
 8000d66:	6821      	ldrge	r1, [r4, #0]
 8000d68:	f021 0104 	bicge.w	r1, r1, #4
 8000d6c:	6021      	strge	r1, [r4, #0]
 8000d6e:	b90d      	cbnz	r5, 8000d74 <_printf_i+0x118>
 8000d70:	2e00      	cmp	r6, #0
 8000d72:	d04d      	beq.n	8000e10 <_printf_i+0x1b4>
 8000d74:	4616      	mov	r6, r2
 8000d76:	fbb5 f1f3 	udiv	r1, r5, r3
 8000d7a:	fb03 5711 	mls	r7, r3, r1, r5
 8000d7e:	5dc7      	ldrb	r7, [r0, r7]
 8000d80:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000d84:	462f      	mov	r7, r5
 8000d86:	42bb      	cmp	r3, r7
 8000d88:	460d      	mov	r5, r1
 8000d8a:	d9f4      	bls.n	8000d76 <_printf_i+0x11a>
 8000d8c:	2b08      	cmp	r3, #8
 8000d8e:	d10b      	bne.n	8000da8 <_printf_i+0x14c>
 8000d90:	6823      	ldr	r3, [r4, #0]
 8000d92:	07df      	lsls	r7, r3, #31
 8000d94:	d508      	bpl.n	8000da8 <_printf_i+0x14c>
 8000d96:	6923      	ldr	r3, [r4, #16]
 8000d98:	6861      	ldr	r1, [r4, #4]
 8000d9a:	4299      	cmp	r1, r3
 8000d9c:	bfde      	ittt	le
 8000d9e:	2330      	movle	r3, #48	; 0x30
 8000da0:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000da4:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000da8:	1b92      	subs	r2, r2, r6
 8000daa:	6122      	str	r2, [r4, #16]
 8000dac:	f8cd a000 	str.w	sl, [sp]
 8000db0:	464b      	mov	r3, r9
 8000db2:	aa03      	add	r2, sp, #12
 8000db4:	4621      	mov	r1, r4
 8000db6:	4640      	mov	r0, r8
 8000db8:	f7ff fee2 	bl	8000b80 <_printf_common>
 8000dbc:	3001      	adds	r0, #1
 8000dbe:	d14c      	bne.n	8000e5a <_printf_i+0x1fe>
 8000dc0:	f04f 30ff 	mov.w	r0, #4294967295
 8000dc4:	b004      	add	sp, #16
 8000dc6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dca:	4835      	ldr	r0, [pc, #212]	; (8000ea0 <_printf_i+0x244>)
 8000dcc:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000dd0:	6823      	ldr	r3, [r4, #0]
 8000dd2:	680e      	ldr	r6, [r1, #0]
 8000dd4:	061f      	lsls	r7, r3, #24
 8000dd6:	f856 5b04 	ldr.w	r5, [r6], #4
 8000dda:	600e      	str	r6, [r1, #0]
 8000ddc:	d514      	bpl.n	8000e08 <_printf_i+0x1ac>
 8000dde:	07d9      	lsls	r1, r3, #31
 8000de0:	bf44      	itt	mi
 8000de2:	f043 0320 	orrmi.w	r3, r3, #32
 8000de6:	6023      	strmi	r3, [r4, #0]
 8000de8:	b91d      	cbnz	r5, 8000df2 <_printf_i+0x196>
 8000dea:	6823      	ldr	r3, [r4, #0]
 8000dec:	f023 0320 	bic.w	r3, r3, #32
 8000df0:	6023      	str	r3, [r4, #0]
 8000df2:	2310      	movs	r3, #16
 8000df4:	e7b0      	b.n	8000d58 <_printf_i+0xfc>
 8000df6:	6823      	ldr	r3, [r4, #0]
 8000df8:	f043 0320 	orr.w	r3, r3, #32
 8000dfc:	6023      	str	r3, [r4, #0]
 8000dfe:	2378      	movs	r3, #120	; 0x78
 8000e00:	4828      	ldr	r0, [pc, #160]	; (8000ea4 <_printf_i+0x248>)
 8000e02:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000e06:	e7e3      	b.n	8000dd0 <_printf_i+0x174>
 8000e08:	065e      	lsls	r6, r3, #25
 8000e0a:	bf48      	it	mi
 8000e0c:	b2ad      	uxthmi	r5, r5
 8000e0e:	e7e6      	b.n	8000dde <_printf_i+0x182>
 8000e10:	4616      	mov	r6, r2
 8000e12:	e7bb      	b.n	8000d8c <_printf_i+0x130>
 8000e14:	680b      	ldr	r3, [r1, #0]
 8000e16:	6826      	ldr	r6, [r4, #0]
 8000e18:	6960      	ldr	r0, [r4, #20]
 8000e1a:	1d1d      	adds	r5, r3, #4
 8000e1c:	600d      	str	r5, [r1, #0]
 8000e1e:	0635      	lsls	r5, r6, #24
 8000e20:	681b      	ldr	r3, [r3, #0]
 8000e22:	d501      	bpl.n	8000e28 <_printf_i+0x1cc>
 8000e24:	6018      	str	r0, [r3, #0]
 8000e26:	e002      	b.n	8000e2e <_printf_i+0x1d2>
 8000e28:	0671      	lsls	r1, r6, #25
 8000e2a:	d5fb      	bpl.n	8000e24 <_printf_i+0x1c8>
 8000e2c:	8018      	strh	r0, [r3, #0]
 8000e2e:	2300      	movs	r3, #0
 8000e30:	6123      	str	r3, [r4, #16]
 8000e32:	4616      	mov	r6, r2
 8000e34:	e7ba      	b.n	8000dac <_printf_i+0x150>
 8000e36:	680b      	ldr	r3, [r1, #0]
 8000e38:	1d1a      	adds	r2, r3, #4
 8000e3a:	600a      	str	r2, [r1, #0]
 8000e3c:	681e      	ldr	r6, [r3, #0]
 8000e3e:	6862      	ldr	r2, [r4, #4]
 8000e40:	2100      	movs	r1, #0
 8000e42:	4630      	mov	r0, r6
 8000e44:	f7ff f9c4 	bl	80001d0 <memchr>
 8000e48:	b108      	cbz	r0, 8000e4e <_printf_i+0x1f2>
 8000e4a:	1b80      	subs	r0, r0, r6
 8000e4c:	6060      	str	r0, [r4, #4]
 8000e4e:	6863      	ldr	r3, [r4, #4]
 8000e50:	6123      	str	r3, [r4, #16]
 8000e52:	2300      	movs	r3, #0
 8000e54:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e58:	e7a8      	b.n	8000dac <_printf_i+0x150>
 8000e5a:	6923      	ldr	r3, [r4, #16]
 8000e5c:	4632      	mov	r2, r6
 8000e5e:	4649      	mov	r1, r9
 8000e60:	4640      	mov	r0, r8
 8000e62:	47d0      	blx	sl
 8000e64:	3001      	adds	r0, #1
 8000e66:	d0ab      	beq.n	8000dc0 <_printf_i+0x164>
 8000e68:	6823      	ldr	r3, [r4, #0]
 8000e6a:	079b      	lsls	r3, r3, #30
 8000e6c:	d413      	bmi.n	8000e96 <_printf_i+0x23a>
 8000e6e:	68e0      	ldr	r0, [r4, #12]
 8000e70:	9b03      	ldr	r3, [sp, #12]
 8000e72:	4298      	cmp	r0, r3
 8000e74:	bfb8      	it	lt
 8000e76:	4618      	movlt	r0, r3
 8000e78:	e7a4      	b.n	8000dc4 <_printf_i+0x168>
 8000e7a:	2301      	movs	r3, #1
 8000e7c:	4632      	mov	r2, r6
 8000e7e:	4649      	mov	r1, r9
 8000e80:	4640      	mov	r0, r8
 8000e82:	47d0      	blx	sl
 8000e84:	3001      	adds	r0, #1
 8000e86:	d09b      	beq.n	8000dc0 <_printf_i+0x164>
 8000e88:	3501      	adds	r5, #1
 8000e8a:	68e3      	ldr	r3, [r4, #12]
 8000e8c:	9903      	ldr	r1, [sp, #12]
 8000e8e:	1a5b      	subs	r3, r3, r1
 8000e90:	42ab      	cmp	r3, r5
 8000e92:	dcf2      	bgt.n	8000e7a <_printf_i+0x21e>
 8000e94:	e7eb      	b.n	8000e6e <_printf_i+0x212>
 8000e96:	2500      	movs	r5, #0
 8000e98:	f104 0619 	add.w	r6, r4, #25
 8000e9c:	e7f5      	b.n	8000e8a <_printf_i+0x22e>
 8000e9e:	bf00      	nop
 8000ea0:	08001561 	.word	0x08001561
 8000ea4:	08001572 	.word	0x08001572

08000ea8 <_sbrk_r>:
 8000ea8:	b538      	push	{r3, r4, r5, lr}
 8000eaa:	4d06      	ldr	r5, [pc, #24]	; (8000ec4 <_sbrk_r+0x1c>)
 8000eac:	2300      	movs	r3, #0
 8000eae:	4604      	mov	r4, r0
 8000eb0:	4608      	mov	r0, r1
 8000eb2:	602b      	str	r3, [r5, #0]
 8000eb4:	f7ff fa6c 	bl	8000390 <_sbrk>
 8000eb8:	1c43      	adds	r3, r0, #1
 8000eba:	d102      	bne.n	8000ec2 <_sbrk_r+0x1a>
 8000ebc:	682b      	ldr	r3, [r5, #0]
 8000ebe:	b103      	cbz	r3, 8000ec2 <_sbrk_r+0x1a>
 8000ec0:	6023      	str	r3, [r4, #0]
 8000ec2:	bd38      	pop	{r3, r4, r5, pc}
 8000ec4:	20000098 	.word	0x20000098

08000ec8 <__sread>:
 8000ec8:	b510      	push	{r4, lr}
 8000eca:	460c      	mov	r4, r1
 8000ecc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ed0:	f000 fab4 	bl	800143c <_read_r>
 8000ed4:	2800      	cmp	r0, #0
 8000ed6:	bfab      	itete	ge
 8000ed8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000eda:	89a3      	ldrhlt	r3, [r4, #12]
 8000edc:	181b      	addge	r3, r3, r0
 8000ede:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ee2:	bfac      	ite	ge
 8000ee4:	6563      	strge	r3, [r4, #84]	; 0x54
 8000ee6:	81a3      	strhlt	r3, [r4, #12]
 8000ee8:	bd10      	pop	{r4, pc}

08000eea <__swrite>:
 8000eea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000eee:	461f      	mov	r7, r3
 8000ef0:	898b      	ldrh	r3, [r1, #12]
 8000ef2:	05db      	lsls	r3, r3, #23
 8000ef4:	4605      	mov	r5, r0
 8000ef6:	460c      	mov	r4, r1
 8000ef8:	4616      	mov	r6, r2
 8000efa:	d505      	bpl.n	8000f08 <__swrite+0x1e>
 8000efc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f00:	2302      	movs	r3, #2
 8000f02:	2200      	movs	r2, #0
 8000f04:	f000 f9c8 	bl	8001298 <_lseek_r>
 8000f08:	89a3      	ldrh	r3, [r4, #12]
 8000f0a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f0e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f12:	81a3      	strh	r3, [r4, #12]
 8000f14:	4632      	mov	r2, r6
 8000f16:	463b      	mov	r3, r7
 8000f18:	4628      	mov	r0, r5
 8000f1a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f1e:	f000 b869 	b.w	8000ff4 <_write_r>

08000f22 <__sseek>:
 8000f22:	b510      	push	{r4, lr}
 8000f24:	460c      	mov	r4, r1
 8000f26:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f2a:	f000 f9b5 	bl	8001298 <_lseek_r>
 8000f2e:	1c43      	adds	r3, r0, #1
 8000f30:	89a3      	ldrh	r3, [r4, #12]
 8000f32:	bf15      	itete	ne
 8000f34:	6560      	strne	r0, [r4, #84]	; 0x54
 8000f36:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000f3a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000f3e:	81a3      	strheq	r3, [r4, #12]
 8000f40:	bf18      	it	ne
 8000f42:	81a3      	strhne	r3, [r4, #12]
 8000f44:	bd10      	pop	{r4, pc}

08000f46 <__sclose>:
 8000f46:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f4a:	f000 b8d3 	b.w	80010f4 <_close_r>
	...

08000f50 <__swbuf_r>:
 8000f50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f52:	460e      	mov	r6, r1
 8000f54:	4614      	mov	r4, r2
 8000f56:	4605      	mov	r5, r0
 8000f58:	b118      	cbz	r0, 8000f62 <__swbuf_r+0x12>
 8000f5a:	6983      	ldr	r3, [r0, #24]
 8000f5c:	b90b      	cbnz	r3, 8000f62 <__swbuf_r+0x12>
 8000f5e:	f7ff fbbb 	bl	80006d8 <__sinit>
 8000f62:	4b21      	ldr	r3, [pc, #132]	; (8000fe8 <__swbuf_r+0x98>)
 8000f64:	429c      	cmp	r4, r3
 8000f66:	d12b      	bne.n	8000fc0 <__swbuf_r+0x70>
 8000f68:	686c      	ldr	r4, [r5, #4]
 8000f6a:	69a3      	ldr	r3, [r4, #24]
 8000f6c:	60a3      	str	r3, [r4, #8]
 8000f6e:	89a3      	ldrh	r3, [r4, #12]
 8000f70:	071a      	lsls	r2, r3, #28
 8000f72:	d52f      	bpl.n	8000fd4 <__swbuf_r+0x84>
 8000f74:	6923      	ldr	r3, [r4, #16]
 8000f76:	b36b      	cbz	r3, 8000fd4 <__swbuf_r+0x84>
 8000f78:	6923      	ldr	r3, [r4, #16]
 8000f7a:	6820      	ldr	r0, [r4, #0]
 8000f7c:	1ac0      	subs	r0, r0, r3
 8000f7e:	6963      	ldr	r3, [r4, #20]
 8000f80:	b2f6      	uxtb	r6, r6
 8000f82:	4283      	cmp	r3, r0
 8000f84:	4637      	mov	r7, r6
 8000f86:	dc04      	bgt.n	8000f92 <__swbuf_r+0x42>
 8000f88:	4621      	mov	r1, r4
 8000f8a:	4628      	mov	r0, r5
 8000f8c:	f000 f948 	bl	8001220 <_fflush_r>
 8000f90:	bb30      	cbnz	r0, 8000fe0 <__swbuf_r+0x90>
 8000f92:	68a3      	ldr	r3, [r4, #8]
 8000f94:	3b01      	subs	r3, #1
 8000f96:	60a3      	str	r3, [r4, #8]
 8000f98:	6823      	ldr	r3, [r4, #0]
 8000f9a:	1c5a      	adds	r2, r3, #1
 8000f9c:	6022      	str	r2, [r4, #0]
 8000f9e:	701e      	strb	r6, [r3, #0]
 8000fa0:	6963      	ldr	r3, [r4, #20]
 8000fa2:	3001      	adds	r0, #1
 8000fa4:	4283      	cmp	r3, r0
 8000fa6:	d004      	beq.n	8000fb2 <__swbuf_r+0x62>
 8000fa8:	89a3      	ldrh	r3, [r4, #12]
 8000faa:	07db      	lsls	r3, r3, #31
 8000fac:	d506      	bpl.n	8000fbc <__swbuf_r+0x6c>
 8000fae:	2e0a      	cmp	r6, #10
 8000fb0:	d104      	bne.n	8000fbc <__swbuf_r+0x6c>
 8000fb2:	4621      	mov	r1, r4
 8000fb4:	4628      	mov	r0, r5
 8000fb6:	f000 f933 	bl	8001220 <_fflush_r>
 8000fba:	b988      	cbnz	r0, 8000fe0 <__swbuf_r+0x90>
 8000fbc:	4638      	mov	r0, r7
 8000fbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fc0:	4b0a      	ldr	r3, [pc, #40]	; (8000fec <__swbuf_r+0x9c>)
 8000fc2:	429c      	cmp	r4, r3
 8000fc4:	d101      	bne.n	8000fca <__swbuf_r+0x7a>
 8000fc6:	68ac      	ldr	r4, [r5, #8]
 8000fc8:	e7cf      	b.n	8000f6a <__swbuf_r+0x1a>
 8000fca:	4b09      	ldr	r3, [pc, #36]	; (8000ff0 <__swbuf_r+0xa0>)
 8000fcc:	429c      	cmp	r4, r3
 8000fce:	bf08      	it	eq
 8000fd0:	68ec      	ldreq	r4, [r5, #12]
 8000fd2:	e7ca      	b.n	8000f6a <__swbuf_r+0x1a>
 8000fd4:	4621      	mov	r1, r4
 8000fd6:	4628      	mov	r0, r5
 8000fd8:	f000 f81e 	bl	8001018 <__swsetup_r>
 8000fdc:	2800      	cmp	r0, #0
 8000fde:	d0cb      	beq.n	8000f78 <__swbuf_r+0x28>
 8000fe0:	f04f 37ff 	mov.w	r7, #4294967295
 8000fe4:	e7ea      	b.n	8000fbc <__swbuf_r+0x6c>
 8000fe6:	bf00      	nop
 8000fe8:	08001510 	.word	0x08001510
 8000fec:	08001530 	.word	0x08001530
 8000ff0:	080014f0 	.word	0x080014f0

08000ff4 <_write_r>:
 8000ff4:	b538      	push	{r3, r4, r5, lr}
 8000ff6:	4d07      	ldr	r5, [pc, #28]	; (8001014 <_write_r+0x20>)
 8000ff8:	4604      	mov	r4, r0
 8000ffa:	4608      	mov	r0, r1
 8000ffc:	4611      	mov	r1, r2
 8000ffe:	2200      	movs	r2, #0
 8001000:	602a      	str	r2, [r5, #0]
 8001002:	461a      	mov	r2, r3
 8001004:	f7ff f973 	bl	80002ee <_write>
 8001008:	1c43      	adds	r3, r0, #1
 800100a:	d102      	bne.n	8001012 <_write_r+0x1e>
 800100c:	682b      	ldr	r3, [r5, #0]
 800100e:	b103      	cbz	r3, 8001012 <_write_r+0x1e>
 8001010:	6023      	str	r3, [r4, #0]
 8001012:	bd38      	pop	{r3, r4, r5, pc}
 8001014:	20000098 	.word	0x20000098

08001018 <__swsetup_r>:
 8001018:	4b32      	ldr	r3, [pc, #200]	; (80010e4 <__swsetup_r+0xcc>)
 800101a:	b570      	push	{r4, r5, r6, lr}
 800101c:	681d      	ldr	r5, [r3, #0]
 800101e:	4606      	mov	r6, r0
 8001020:	460c      	mov	r4, r1
 8001022:	b125      	cbz	r5, 800102e <__swsetup_r+0x16>
 8001024:	69ab      	ldr	r3, [r5, #24]
 8001026:	b913      	cbnz	r3, 800102e <__swsetup_r+0x16>
 8001028:	4628      	mov	r0, r5
 800102a:	f7ff fb55 	bl	80006d8 <__sinit>
 800102e:	4b2e      	ldr	r3, [pc, #184]	; (80010e8 <__swsetup_r+0xd0>)
 8001030:	429c      	cmp	r4, r3
 8001032:	d10f      	bne.n	8001054 <__swsetup_r+0x3c>
 8001034:	686c      	ldr	r4, [r5, #4]
 8001036:	89a3      	ldrh	r3, [r4, #12]
 8001038:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800103c:	0719      	lsls	r1, r3, #28
 800103e:	d42c      	bmi.n	800109a <__swsetup_r+0x82>
 8001040:	06dd      	lsls	r5, r3, #27
 8001042:	d411      	bmi.n	8001068 <__swsetup_r+0x50>
 8001044:	2309      	movs	r3, #9
 8001046:	6033      	str	r3, [r6, #0]
 8001048:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800104c:	81a3      	strh	r3, [r4, #12]
 800104e:	f04f 30ff 	mov.w	r0, #4294967295
 8001052:	e03e      	b.n	80010d2 <__swsetup_r+0xba>
 8001054:	4b25      	ldr	r3, [pc, #148]	; (80010ec <__swsetup_r+0xd4>)
 8001056:	429c      	cmp	r4, r3
 8001058:	d101      	bne.n	800105e <__swsetup_r+0x46>
 800105a:	68ac      	ldr	r4, [r5, #8]
 800105c:	e7eb      	b.n	8001036 <__swsetup_r+0x1e>
 800105e:	4b24      	ldr	r3, [pc, #144]	; (80010f0 <__swsetup_r+0xd8>)
 8001060:	429c      	cmp	r4, r3
 8001062:	bf08      	it	eq
 8001064:	68ec      	ldreq	r4, [r5, #12]
 8001066:	e7e6      	b.n	8001036 <__swsetup_r+0x1e>
 8001068:	0758      	lsls	r0, r3, #29
 800106a:	d512      	bpl.n	8001092 <__swsetup_r+0x7a>
 800106c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800106e:	b141      	cbz	r1, 8001082 <__swsetup_r+0x6a>
 8001070:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001074:	4299      	cmp	r1, r3
 8001076:	d002      	beq.n	800107e <__swsetup_r+0x66>
 8001078:	4630      	mov	r0, r6
 800107a:	f000 f98f 	bl	800139c <_free_r>
 800107e:	2300      	movs	r3, #0
 8001080:	6363      	str	r3, [r4, #52]	; 0x34
 8001082:	89a3      	ldrh	r3, [r4, #12]
 8001084:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001088:	81a3      	strh	r3, [r4, #12]
 800108a:	2300      	movs	r3, #0
 800108c:	6063      	str	r3, [r4, #4]
 800108e:	6923      	ldr	r3, [r4, #16]
 8001090:	6023      	str	r3, [r4, #0]
 8001092:	89a3      	ldrh	r3, [r4, #12]
 8001094:	f043 0308 	orr.w	r3, r3, #8
 8001098:	81a3      	strh	r3, [r4, #12]
 800109a:	6923      	ldr	r3, [r4, #16]
 800109c:	b94b      	cbnz	r3, 80010b2 <__swsetup_r+0x9a>
 800109e:	89a3      	ldrh	r3, [r4, #12]
 80010a0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80010a4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80010a8:	d003      	beq.n	80010b2 <__swsetup_r+0x9a>
 80010aa:	4621      	mov	r1, r4
 80010ac:	4630      	mov	r0, r6
 80010ae:	f000 f929 	bl	8001304 <__smakebuf_r>
 80010b2:	89a0      	ldrh	r0, [r4, #12]
 80010b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010b8:	f010 0301 	ands.w	r3, r0, #1
 80010bc:	d00a      	beq.n	80010d4 <__swsetup_r+0xbc>
 80010be:	2300      	movs	r3, #0
 80010c0:	60a3      	str	r3, [r4, #8]
 80010c2:	6963      	ldr	r3, [r4, #20]
 80010c4:	425b      	negs	r3, r3
 80010c6:	61a3      	str	r3, [r4, #24]
 80010c8:	6923      	ldr	r3, [r4, #16]
 80010ca:	b943      	cbnz	r3, 80010de <__swsetup_r+0xc6>
 80010cc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80010d0:	d1ba      	bne.n	8001048 <__swsetup_r+0x30>
 80010d2:	bd70      	pop	{r4, r5, r6, pc}
 80010d4:	0781      	lsls	r1, r0, #30
 80010d6:	bf58      	it	pl
 80010d8:	6963      	ldrpl	r3, [r4, #20]
 80010da:	60a3      	str	r3, [r4, #8]
 80010dc:	e7f4      	b.n	80010c8 <__swsetup_r+0xb0>
 80010de:	2000      	movs	r0, #0
 80010e0:	e7f7      	b.n	80010d2 <__swsetup_r+0xba>
 80010e2:	bf00      	nop
 80010e4:	20000000 	.word	0x20000000
 80010e8:	08001510 	.word	0x08001510
 80010ec:	08001530 	.word	0x08001530
 80010f0:	080014f0 	.word	0x080014f0

080010f4 <_close_r>:
 80010f4:	b538      	push	{r3, r4, r5, lr}
 80010f6:	4d06      	ldr	r5, [pc, #24]	; (8001110 <_close_r+0x1c>)
 80010f8:	2300      	movs	r3, #0
 80010fa:	4604      	mov	r4, r0
 80010fc:	4608      	mov	r0, r1
 80010fe:	602b      	str	r3, [r5, #0]
 8001100:	f7ff f911 	bl	8000326 <_close>
 8001104:	1c43      	adds	r3, r0, #1
 8001106:	d102      	bne.n	800110e <_close_r+0x1a>
 8001108:	682b      	ldr	r3, [r5, #0]
 800110a:	b103      	cbz	r3, 800110e <_close_r+0x1a>
 800110c:	6023      	str	r3, [r4, #0]
 800110e:	bd38      	pop	{r3, r4, r5, pc}
 8001110:	20000098 	.word	0x20000098

08001114 <__sflush_r>:
 8001114:	898a      	ldrh	r2, [r1, #12]
 8001116:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800111a:	4605      	mov	r5, r0
 800111c:	0710      	lsls	r0, r2, #28
 800111e:	460c      	mov	r4, r1
 8001120:	d458      	bmi.n	80011d4 <__sflush_r+0xc0>
 8001122:	684b      	ldr	r3, [r1, #4]
 8001124:	2b00      	cmp	r3, #0
 8001126:	dc05      	bgt.n	8001134 <__sflush_r+0x20>
 8001128:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800112a:	2b00      	cmp	r3, #0
 800112c:	dc02      	bgt.n	8001134 <__sflush_r+0x20>
 800112e:	2000      	movs	r0, #0
 8001130:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001134:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001136:	2e00      	cmp	r6, #0
 8001138:	d0f9      	beq.n	800112e <__sflush_r+0x1a>
 800113a:	2300      	movs	r3, #0
 800113c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001140:	682f      	ldr	r7, [r5, #0]
 8001142:	602b      	str	r3, [r5, #0]
 8001144:	d032      	beq.n	80011ac <__sflush_r+0x98>
 8001146:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001148:	89a3      	ldrh	r3, [r4, #12]
 800114a:	075a      	lsls	r2, r3, #29
 800114c:	d505      	bpl.n	800115a <__sflush_r+0x46>
 800114e:	6863      	ldr	r3, [r4, #4]
 8001150:	1ac0      	subs	r0, r0, r3
 8001152:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001154:	b10b      	cbz	r3, 800115a <__sflush_r+0x46>
 8001156:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001158:	1ac0      	subs	r0, r0, r3
 800115a:	2300      	movs	r3, #0
 800115c:	4602      	mov	r2, r0
 800115e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001160:	6a21      	ldr	r1, [r4, #32]
 8001162:	4628      	mov	r0, r5
 8001164:	47b0      	blx	r6
 8001166:	1c43      	adds	r3, r0, #1
 8001168:	89a3      	ldrh	r3, [r4, #12]
 800116a:	d106      	bne.n	800117a <__sflush_r+0x66>
 800116c:	6829      	ldr	r1, [r5, #0]
 800116e:	291d      	cmp	r1, #29
 8001170:	d82c      	bhi.n	80011cc <__sflush_r+0xb8>
 8001172:	4a2a      	ldr	r2, [pc, #168]	; (800121c <__sflush_r+0x108>)
 8001174:	40ca      	lsrs	r2, r1
 8001176:	07d6      	lsls	r6, r2, #31
 8001178:	d528      	bpl.n	80011cc <__sflush_r+0xb8>
 800117a:	2200      	movs	r2, #0
 800117c:	6062      	str	r2, [r4, #4]
 800117e:	04d9      	lsls	r1, r3, #19
 8001180:	6922      	ldr	r2, [r4, #16]
 8001182:	6022      	str	r2, [r4, #0]
 8001184:	d504      	bpl.n	8001190 <__sflush_r+0x7c>
 8001186:	1c42      	adds	r2, r0, #1
 8001188:	d101      	bne.n	800118e <__sflush_r+0x7a>
 800118a:	682b      	ldr	r3, [r5, #0]
 800118c:	b903      	cbnz	r3, 8001190 <__sflush_r+0x7c>
 800118e:	6560      	str	r0, [r4, #84]	; 0x54
 8001190:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001192:	602f      	str	r7, [r5, #0]
 8001194:	2900      	cmp	r1, #0
 8001196:	d0ca      	beq.n	800112e <__sflush_r+0x1a>
 8001198:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800119c:	4299      	cmp	r1, r3
 800119e:	d002      	beq.n	80011a6 <__sflush_r+0x92>
 80011a0:	4628      	mov	r0, r5
 80011a2:	f000 f8fb 	bl	800139c <_free_r>
 80011a6:	2000      	movs	r0, #0
 80011a8:	6360      	str	r0, [r4, #52]	; 0x34
 80011aa:	e7c1      	b.n	8001130 <__sflush_r+0x1c>
 80011ac:	6a21      	ldr	r1, [r4, #32]
 80011ae:	2301      	movs	r3, #1
 80011b0:	4628      	mov	r0, r5
 80011b2:	47b0      	blx	r6
 80011b4:	1c41      	adds	r1, r0, #1
 80011b6:	d1c7      	bne.n	8001148 <__sflush_r+0x34>
 80011b8:	682b      	ldr	r3, [r5, #0]
 80011ba:	2b00      	cmp	r3, #0
 80011bc:	d0c4      	beq.n	8001148 <__sflush_r+0x34>
 80011be:	2b1d      	cmp	r3, #29
 80011c0:	d001      	beq.n	80011c6 <__sflush_r+0xb2>
 80011c2:	2b16      	cmp	r3, #22
 80011c4:	d101      	bne.n	80011ca <__sflush_r+0xb6>
 80011c6:	602f      	str	r7, [r5, #0]
 80011c8:	e7b1      	b.n	800112e <__sflush_r+0x1a>
 80011ca:	89a3      	ldrh	r3, [r4, #12]
 80011cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011d0:	81a3      	strh	r3, [r4, #12]
 80011d2:	e7ad      	b.n	8001130 <__sflush_r+0x1c>
 80011d4:	690f      	ldr	r7, [r1, #16]
 80011d6:	2f00      	cmp	r7, #0
 80011d8:	d0a9      	beq.n	800112e <__sflush_r+0x1a>
 80011da:	0793      	lsls	r3, r2, #30
 80011dc:	680e      	ldr	r6, [r1, #0]
 80011de:	bf08      	it	eq
 80011e0:	694b      	ldreq	r3, [r1, #20]
 80011e2:	600f      	str	r7, [r1, #0]
 80011e4:	bf18      	it	ne
 80011e6:	2300      	movne	r3, #0
 80011e8:	eba6 0807 	sub.w	r8, r6, r7
 80011ec:	608b      	str	r3, [r1, #8]
 80011ee:	f1b8 0f00 	cmp.w	r8, #0
 80011f2:	dd9c      	ble.n	800112e <__sflush_r+0x1a>
 80011f4:	6a21      	ldr	r1, [r4, #32]
 80011f6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80011f8:	4643      	mov	r3, r8
 80011fa:	463a      	mov	r2, r7
 80011fc:	4628      	mov	r0, r5
 80011fe:	47b0      	blx	r6
 8001200:	2800      	cmp	r0, #0
 8001202:	dc06      	bgt.n	8001212 <__sflush_r+0xfe>
 8001204:	89a3      	ldrh	r3, [r4, #12]
 8001206:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800120a:	81a3      	strh	r3, [r4, #12]
 800120c:	f04f 30ff 	mov.w	r0, #4294967295
 8001210:	e78e      	b.n	8001130 <__sflush_r+0x1c>
 8001212:	4407      	add	r7, r0
 8001214:	eba8 0800 	sub.w	r8, r8, r0
 8001218:	e7e9      	b.n	80011ee <__sflush_r+0xda>
 800121a:	bf00      	nop
 800121c:	20400001 	.word	0x20400001

08001220 <_fflush_r>:
 8001220:	b538      	push	{r3, r4, r5, lr}
 8001222:	690b      	ldr	r3, [r1, #16]
 8001224:	4605      	mov	r5, r0
 8001226:	460c      	mov	r4, r1
 8001228:	b913      	cbnz	r3, 8001230 <_fflush_r+0x10>
 800122a:	2500      	movs	r5, #0
 800122c:	4628      	mov	r0, r5
 800122e:	bd38      	pop	{r3, r4, r5, pc}
 8001230:	b118      	cbz	r0, 800123a <_fflush_r+0x1a>
 8001232:	6983      	ldr	r3, [r0, #24]
 8001234:	b90b      	cbnz	r3, 800123a <_fflush_r+0x1a>
 8001236:	f7ff fa4f 	bl	80006d8 <__sinit>
 800123a:	4b14      	ldr	r3, [pc, #80]	; (800128c <_fflush_r+0x6c>)
 800123c:	429c      	cmp	r4, r3
 800123e:	d11b      	bne.n	8001278 <_fflush_r+0x58>
 8001240:	686c      	ldr	r4, [r5, #4]
 8001242:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001246:	2b00      	cmp	r3, #0
 8001248:	d0ef      	beq.n	800122a <_fflush_r+0xa>
 800124a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800124c:	07d0      	lsls	r0, r2, #31
 800124e:	d404      	bmi.n	800125a <_fflush_r+0x3a>
 8001250:	0599      	lsls	r1, r3, #22
 8001252:	d402      	bmi.n	800125a <_fflush_r+0x3a>
 8001254:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001256:	f7ff fadd 	bl	8000814 <__retarget_lock_acquire_recursive>
 800125a:	4628      	mov	r0, r5
 800125c:	4621      	mov	r1, r4
 800125e:	f7ff ff59 	bl	8001114 <__sflush_r>
 8001262:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001264:	07da      	lsls	r2, r3, #31
 8001266:	4605      	mov	r5, r0
 8001268:	d4e0      	bmi.n	800122c <_fflush_r+0xc>
 800126a:	89a3      	ldrh	r3, [r4, #12]
 800126c:	059b      	lsls	r3, r3, #22
 800126e:	d4dd      	bmi.n	800122c <_fflush_r+0xc>
 8001270:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001272:	f7ff fad0 	bl	8000816 <__retarget_lock_release_recursive>
 8001276:	e7d9      	b.n	800122c <_fflush_r+0xc>
 8001278:	4b05      	ldr	r3, [pc, #20]	; (8001290 <_fflush_r+0x70>)
 800127a:	429c      	cmp	r4, r3
 800127c:	d101      	bne.n	8001282 <_fflush_r+0x62>
 800127e:	68ac      	ldr	r4, [r5, #8]
 8001280:	e7df      	b.n	8001242 <_fflush_r+0x22>
 8001282:	4b04      	ldr	r3, [pc, #16]	; (8001294 <_fflush_r+0x74>)
 8001284:	429c      	cmp	r4, r3
 8001286:	bf08      	it	eq
 8001288:	68ec      	ldreq	r4, [r5, #12]
 800128a:	e7da      	b.n	8001242 <_fflush_r+0x22>
 800128c:	08001510 	.word	0x08001510
 8001290:	08001530 	.word	0x08001530
 8001294:	080014f0 	.word	0x080014f0

08001298 <_lseek_r>:
 8001298:	b538      	push	{r3, r4, r5, lr}
 800129a:	4d07      	ldr	r5, [pc, #28]	; (80012b8 <_lseek_r+0x20>)
 800129c:	4604      	mov	r4, r0
 800129e:	4608      	mov	r0, r1
 80012a0:	4611      	mov	r1, r2
 80012a2:	2200      	movs	r2, #0
 80012a4:	602a      	str	r2, [r5, #0]
 80012a6:	461a      	mov	r2, r3
 80012a8:	f7ff f864 	bl	8000374 <_lseek>
 80012ac:	1c43      	adds	r3, r0, #1
 80012ae:	d102      	bne.n	80012b6 <_lseek_r+0x1e>
 80012b0:	682b      	ldr	r3, [r5, #0]
 80012b2:	b103      	cbz	r3, 80012b6 <_lseek_r+0x1e>
 80012b4:	6023      	str	r3, [r4, #0]
 80012b6:	bd38      	pop	{r3, r4, r5, pc}
 80012b8:	20000098 	.word	0x20000098

080012bc <__swhatbuf_r>:
 80012bc:	b570      	push	{r4, r5, r6, lr}
 80012be:	460e      	mov	r6, r1
 80012c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012c4:	2900      	cmp	r1, #0
 80012c6:	b096      	sub	sp, #88	; 0x58
 80012c8:	4614      	mov	r4, r2
 80012ca:	461d      	mov	r5, r3
 80012cc:	da07      	bge.n	80012de <__swhatbuf_r+0x22>
 80012ce:	2300      	movs	r3, #0
 80012d0:	602b      	str	r3, [r5, #0]
 80012d2:	89b3      	ldrh	r3, [r6, #12]
 80012d4:	061a      	lsls	r2, r3, #24
 80012d6:	d410      	bmi.n	80012fa <__swhatbuf_r+0x3e>
 80012d8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012dc:	e00e      	b.n	80012fc <__swhatbuf_r+0x40>
 80012de:	466a      	mov	r2, sp
 80012e0:	f000 f8be 	bl	8001460 <_fstat_r>
 80012e4:	2800      	cmp	r0, #0
 80012e6:	dbf2      	blt.n	80012ce <__swhatbuf_r+0x12>
 80012e8:	9a01      	ldr	r2, [sp, #4]
 80012ea:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80012ee:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80012f2:	425a      	negs	r2, r3
 80012f4:	415a      	adcs	r2, r3
 80012f6:	602a      	str	r2, [r5, #0]
 80012f8:	e7ee      	b.n	80012d8 <__swhatbuf_r+0x1c>
 80012fa:	2340      	movs	r3, #64	; 0x40
 80012fc:	2000      	movs	r0, #0
 80012fe:	6023      	str	r3, [r4, #0]
 8001300:	b016      	add	sp, #88	; 0x58
 8001302:	bd70      	pop	{r4, r5, r6, pc}

08001304 <__smakebuf_r>:
 8001304:	898b      	ldrh	r3, [r1, #12]
 8001306:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001308:	079d      	lsls	r5, r3, #30
 800130a:	4606      	mov	r6, r0
 800130c:	460c      	mov	r4, r1
 800130e:	d507      	bpl.n	8001320 <__smakebuf_r+0x1c>
 8001310:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001314:	6023      	str	r3, [r4, #0]
 8001316:	6123      	str	r3, [r4, #16]
 8001318:	2301      	movs	r3, #1
 800131a:	6163      	str	r3, [r4, #20]
 800131c:	b002      	add	sp, #8
 800131e:	bd70      	pop	{r4, r5, r6, pc}
 8001320:	ab01      	add	r3, sp, #4
 8001322:	466a      	mov	r2, sp
 8001324:	f7ff ffca 	bl	80012bc <__swhatbuf_r>
 8001328:	9900      	ldr	r1, [sp, #0]
 800132a:	4605      	mov	r5, r0
 800132c:	4630      	mov	r0, r6
 800132e:	f7ff fa73 	bl	8000818 <_malloc_r>
 8001332:	b948      	cbnz	r0, 8001348 <__smakebuf_r+0x44>
 8001334:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001338:	059a      	lsls	r2, r3, #22
 800133a:	d4ef      	bmi.n	800131c <__smakebuf_r+0x18>
 800133c:	f023 0303 	bic.w	r3, r3, #3
 8001340:	f043 0302 	orr.w	r3, r3, #2
 8001344:	81a3      	strh	r3, [r4, #12]
 8001346:	e7e3      	b.n	8001310 <__smakebuf_r+0xc>
 8001348:	4b0d      	ldr	r3, [pc, #52]	; (8001380 <__smakebuf_r+0x7c>)
 800134a:	62b3      	str	r3, [r6, #40]	; 0x28
 800134c:	89a3      	ldrh	r3, [r4, #12]
 800134e:	6020      	str	r0, [r4, #0]
 8001350:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001354:	81a3      	strh	r3, [r4, #12]
 8001356:	9b00      	ldr	r3, [sp, #0]
 8001358:	6163      	str	r3, [r4, #20]
 800135a:	9b01      	ldr	r3, [sp, #4]
 800135c:	6120      	str	r0, [r4, #16]
 800135e:	b15b      	cbz	r3, 8001378 <__smakebuf_r+0x74>
 8001360:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001364:	4630      	mov	r0, r6
 8001366:	f000 f88d 	bl	8001484 <_isatty_r>
 800136a:	b128      	cbz	r0, 8001378 <__smakebuf_r+0x74>
 800136c:	89a3      	ldrh	r3, [r4, #12]
 800136e:	f023 0303 	bic.w	r3, r3, #3
 8001372:	f043 0301 	orr.w	r3, r3, #1
 8001376:	81a3      	strh	r3, [r4, #12]
 8001378:	89a0      	ldrh	r0, [r4, #12]
 800137a:	4305      	orrs	r5, r0
 800137c:	81a5      	strh	r5, [r4, #12]
 800137e:	e7cd      	b.n	800131c <__smakebuf_r+0x18>
 8001380:	08000671 	.word	0x08000671

08001384 <__malloc_lock>:
 8001384:	4801      	ldr	r0, [pc, #4]	; (800138c <__malloc_lock+0x8>)
 8001386:	f7ff ba45 	b.w	8000814 <__retarget_lock_acquire_recursive>
 800138a:	bf00      	nop
 800138c:	20000090 	.word	0x20000090

08001390 <__malloc_unlock>:
 8001390:	4801      	ldr	r0, [pc, #4]	; (8001398 <__malloc_unlock+0x8>)
 8001392:	f7ff ba40 	b.w	8000816 <__retarget_lock_release_recursive>
 8001396:	bf00      	nop
 8001398:	20000090 	.word	0x20000090

0800139c <_free_r>:
 800139c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800139e:	2900      	cmp	r1, #0
 80013a0:	d048      	beq.n	8001434 <_free_r+0x98>
 80013a2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80013a6:	9001      	str	r0, [sp, #4]
 80013a8:	2b00      	cmp	r3, #0
 80013aa:	f1a1 0404 	sub.w	r4, r1, #4
 80013ae:	bfb8      	it	lt
 80013b0:	18e4      	addlt	r4, r4, r3
 80013b2:	f7ff ffe7 	bl	8001384 <__malloc_lock>
 80013b6:	4a20      	ldr	r2, [pc, #128]	; (8001438 <_free_r+0x9c>)
 80013b8:	9801      	ldr	r0, [sp, #4]
 80013ba:	6813      	ldr	r3, [r2, #0]
 80013bc:	4615      	mov	r5, r2
 80013be:	b933      	cbnz	r3, 80013ce <_free_r+0x32>
 80013c0:	6063      	str	r3, [r4, #4]
 80013c2:	6014      	str	r4, [r2, #0]
 80013c4:	b003      	add	sp, #12
 80013c6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80013ca:	f7ff bfe1 	b.w	8001390 <__malloc_unlock>
 80013ce:	42a3      	cmp	r3, r4
 80013d0:	d90b      	bls.n	80013ea <_free_r+0x4e>
 80013d2:	6821      	ldr	r1, [r4, #0]
 80013d4:	1862      	adds	r2, r4, r1
 80013d6:	4293      	cmp	r3, r2
 80013d8:	bf04      	itt	eq
 80013da:	681a      	ldreq	r2, [r3, #0]
 80013dc:	685b      	ldreq	r3, [r3, #4]
 80013de:	6063      	str	r3, [r4, #4]
 80013e0:	bf04      	itt	eq
 80013e2:	1852      	addeq	r2, r2, r1
 80013e4:	6022      	streq	r2, [r4, #0]
 80013e6:	602c      	str	r4, [r5, #0]
 80013e8:	e7ec      	b.n	80013c4 <_free_r+0x28>
 80013ea:	461a      	mov	r2, r3
 80013ec:	685b      	ldr	r3, [r3, #4]
 80013ee:	b10b      	cbz	r3, 80013f4 <_free_r+0x58>
 80013f0:	42a3      	cmp	r3, r4
 80013f2:	d9fa      	bls.n	80013ea <_free_r+0x4e>
 80013f4:	6811      	ldr	r1, [r2, #0]
 80013f6:	1855      	adds	r5, r2, r1
 80013f8:	42a5      	cmp	r5, r4
 80013fa:	d10b      	bne.n	8001414 <_free_r+0x78>
 80013fc:	6824      	ldr	r4, [r4, #0]
 80013fe:	4421      	add	r1, r4
 8001400:	1854      	adds	r4, r2, r1
 8001402:	42a3      	cmp	r3, r4
 8001404:	6011      	str	r1, [r2, #0]
 8001406:	d1dd      	bne.n	80013c4 <_free_r+0x28>
 8001408:	681c      	ldr	r4, [r3, #0]
 800140a:	685b      	ldr	r3, [r3, #4]
 800140c:	6053      	str	r3, [r2, #4]
 800140e:	4421      	add	r1, r4
 8001410:	6011      	str	r1, [r2, #0]
 8001412:	e7d7      	b.n	80013c4 <_free_r+0x28>
 8001414:	d902      	bls.n	800141c <_free_r+0x80>
 8001416:	230c      	movs	r3, #12
 8001418:	6003      	str	r3, [r0, #0]
 800141a:	e7d3      	b.n	80013c4 <_free_r+0x28>
 800141c:	6825      	ldr	r5, [r4, #0]
 800141e:	1961      	adds	r1, r4, r5
 8001420:	428b      	cmp	r3, r1
 8001422:	bf04      	itt	eq
 8001424:	6819      	ldreq	r1, [r3, #0]
 8001426:	685b      	ldreq	r3, [r3, #4]
 8001428:	6063      	str	r3, [r4, #4]
 800142a:	bf04      	itt	eq
 800142c:	1949      	addeq	r1, r1, r5
 800142e:	6021      	streq	r1, [r4, #0]
 8001430:	6054      	str	r4, [r2, #4]
 8001432:	e7c7      	b.n	80013c4 <_free_r+0x28>
 8001434:	b003      	add	sp, #12
 8001436:	bd30      	pop	{r4, r5, pc}
 8001438:	20000084 	.word	0x20000084

0800143c <_read_r>:
 800143c:	b538      	push	{r3, r4, r5, lr}
 800143e:	4d07      	ldr	r5, [pc, #28]	; (800145c <_read_r+0x20>)
 8001440:	4604      	mov	r4, r0
 8001442:	4608      	mov	r0, r1
 8001444:	4611      	mov	r1, r2
 8001446:	2200      	movs	r2, #0
 8001448:	602a      	str	r2, [r5, #0]
 800144a:	461a      	mov	r2, r3
 800144c:	f7fe ff32 	bl	80002b4 <_read>
 8001450:	1c43      	adds	r3, r0, #1
 8001452:	d102      	bne.n	800145a <_read_r+0x1e>
 8001454:	682b      	ldr	r3, [r5, #0]
 8001456:	b103      	cbz	r3, 800145a <_read_r+0x1e>
 8001458:	6023      	str	r3, [r4, #0]
 800145a:	bd38      	pop	{r3, r4, r5, pc}
 800145c:	20000098 	.word	0x20000098

08001460 <_fstat_r>:
 8001460:	b538      	push	{r3, r4, r5, lr}
 8001462:	4d07      	ldr	r5, [pc, #28]	; (8001480 <_fstat_r+0x20>)
 8001464:	2300      	movs	r3, #0
 8001466:	4604      	mov	r4, r0
 8001468:	4608      	mov	r0, r1
 800146a:	4611      	mov	r1, r2
 800146c:	602b      	str	r3, [r5, #0]
 800146e:	f7fe ff66 	bl	800033e <_fstat>
 8001472:	1c43      	adds	r3, r0, #1
 8001474:	d102      	bne.n	800147c <_fstat_r+0x1c>
 8001476:	682b      	ldr	r3, [r5, #0]
 8001478:	b103      	cbz	r3, 800147c <_fstat_r+0x1c>
 800147a:	6023      	str	r3, [r4, #0]
 800147c:	bd38      	pop	{r3, r4, r5, pc}
 800147e:	bf00      	nop
 8001480:	20000098 	.word	0x20000098

08001484 <_isatty_r>:
 8001484:	b538      	push	{r3, r4, r5, lr}
 8001486:	4d06      	ldr	r5, [pc, #24]	; (80014a0 <_isatty_r+0x1c>)
 8001488:	2300      	movs	r3, #0
 800148a:	4604      	mov	r4, r0
 800148c:	4608      	mov	r0, r1
 800148e:	602b      	str	r3, [r5, #0]
 8001490:	f7fe ff65 	bl	800035e <_isatty>
 8001494:	1c43      	adds	r3, r0, #1
 8001496:	d102      	bne.n	800149e <_isatty_r+0x1a>
 8001498:	682b      	ldr	r3, [r5, #0]
 800149a:	b103      	cbz	r3, 800149e <_isatty_r+0x1a>
 800149c:	6023      	str	r3, [r4, #0]
 800149e:	bd38      	pop	{r3, r4, r5, pc}
 80014a0:	20000098 	.word	0x20000098

080014a4 <_init>:
 80014a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014a6:	bf00      	nop
 80014a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014aa:	bc08      	pop	{r3}
 80014ac:	469e      	mov	lr, r3
 80014ae:	4770      	bx	lr

080014b0 <_fini>:
 80014b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014b2:	bf00      	nop
 80014b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014b6:	bc08      	pop	{r3}
 80014b8:	469e      	mov	lr, r3
 80014ba:	4770      	bx	lr
