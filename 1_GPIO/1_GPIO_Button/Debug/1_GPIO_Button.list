
1_GPIO_Button.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000180  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000308  08000310  00010310  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000308  08000308  00010310  2**0
                  CONTENTS
  4 .ARM          00000000  08000308  08000308  00010310  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000308  08000310  00010310  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000308  08000308  00010308  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800030c  0800030c  0001030c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010310  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00010310  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010310  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000472  00000000  00000000  00010340  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000f0  00000000  00000000  000107b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000108a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000030  00000000  00000000  000108f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001c438  00000000  00000000  00010920  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000565  00000000  00000000  0002cd58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009e465  00000000  00000000  0002d2bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000cb722  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000054  00000000  00000000  000cb778  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080002f0 	.word	0x080002f0

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080002f0 	.word	0x080002f0

080001c8 <main>:

#define PIN13				(1U<<13)
#define PB_PIN				PIN13


int main (void){
 80001c8:	b480      	push	{r7}
 80001ca:	af00      	add	r7, sp, #0

	RCC->AHB2ENR |= GPIOAEN;
 80001cc:	4b1f      	ldr	r3, [pc, #124]	; (800024c <main+0x84>)
 80001ce:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80001d0:	4a1e      	ldr	r2, [pc, #120]	; (800024c <main+0x84>)
 80001d2:	f043 0301 	orr.w	r3, r3, #1
 80001d6:	64d3      	str	r3, [r2, #76]	; 0x4c
	RCC->AHB2ENR |= GPIOCEN;
 80001d8:	4b1c      	ldr	r3, [pc, #112]	; (800024c <main+0x84>)
 80001da:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80001dc:	4a1b      	ldr	r2, [pc, #108]	; (800024c <main+0x84>)
 80001de:	f043 0304 	orr.w	r3, r3, #4
 80001e2:	64d3      	str	r3, [r2, #76]	; 0x4c

	GPIOA->MODER |= (1<<10);
 80001e4:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80001ee:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80001f2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~(1<<11);
 80001f4:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80001fe:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000202:	6013      	str	r3, [r2, #0]

	GPIOC->MODER &=~(1U<<26);
 8000204:	4b12      	ldr	r3, [pc, #72]	; (8000250 <main+0x88>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	4a11      	ldr	r2, [pc, #68]	; (8000250 <main+0x88>)
 800020a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800020e:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~(1U<<27);
 8000210:	4b0f      	ldr	r3, [pc, #60]	; (8000250 <main+0x88>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	4a0e      	ldr	r2, [pc, #56]	; (8000250 <main+0x88>)
 8000216:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800021a:	6013      	str	r3, [r2, #0]

	while(1){
		//Version 1 --> Push button to turn LED ON, else off
		if(GPIOC->IDR & PB_PIN){
 800021c:	4b0c      	ldr	r3, [pc, #48]	; (8000250 <main+0x88>)
 800021e:	691b      	ldr	r3, [r3, #16]
 8000220:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000224:	2b00      	cmp	r3, #0
 8000226:	d008      	beq.n	800023a <main+0x72>
			GPIOA->BSRR |= (LED_PIN<<16);
 8000228:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800022c:	699b      	ldr	r3, [r3, #24]
 800022e:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000232:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000236:	6193      	str	r3, [r2, #24]
 8000238:	e7f0      	b.n	800021c <main+0x54>
		}
//		GPIOA->BSRR |= LED_PIN;
//		GPIOA->ODR ^= LED_PIN;
//		for(int i = 0;i<50000;i++){}
		else {
			GPIOA->BSRR |= (LED_PIN);
 800023a:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800023e:	699b      	ldr	r3, [r3, #24]
 8000240:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000244:	f043 0320 	orr.w	r3, r3, #32
 8000248:	6193      	str	r3, [r2, #24]
		if(GPIOC->IDR & PB_PIN){
 800024a:	e7e7      	b.n	800021c <main+0x54>
 800024c:	40021000 	.word	0x40021000
 8000250:	48000800 	.word	0x48000800

08000254 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000254:	480d      	ldr	r0, [pc, #52]	; (800028c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000256:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000258:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800025c:	480c      	ldr	r0, [pc, #48]	; (8000290 <LoopForever+0x6>)
  ldr r1, =_edata
 800025e:	490d      	ldr	r1, [pc, #52]	; (8000294 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000260:	4a0d      	ldr	r2, [pc, #52]	; (8000298 <LoopForever+0xe>)
  movs r3, #0
 8000262:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000264:	e002      	b.n	800026c <LoopCopyDataInit>

08000266 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000266:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000268:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026a:	3304      	adds	r3, #4

0800026c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800026c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000270:	d3f9      	bcc.n	8000266 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000272:	4a0a      	ldr	r2, [pc, #40]	; (800029c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000274:	4c0a      	ldr	r4, [pc, #40]	; (80002a0 <LoopForever+0x16>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000278:	e001      	b.n	800027e <LoopFillZerobss>

0800027a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800027c:	3204      	adds	r2, #4

0800027e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000280:	d3fb      	bcc.n	800027a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000282:	f000 f811 	bl	80002a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000286:	f7ff ff9f 	bl	80001c8 <main>

0800028a <LoopForever>:

LoopForever:
    b LoopForever
 800028a:	e7fe      	b.n	800028a <LoopForever>
  ldr   r0, =_estack
 800028c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000290:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000294:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000298:	08000310 	.word	0x08000310
  ldr r2, =_sbss
 800029c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a0:	2000001c 	.word	0x2000001c

080002a4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a4:	e7fe      	b.n	80002a4 <ADC1_2_IRQHandler>
	...

080002a8 <__libc_init_array>:
 80002a8:	b570      	push	{r4, r5, r6, lr}
 80002aa:	4d0d      	ldr	r5, [pc, #52]	; (80002e0 <__libc_init_array+0x38>)
 80002ac:	4c0d      	ldr	r4, [pc, #52]	; (80002e4 <__libc_init_array+0x3c>)
 80002ae:	1b64      	subs	r4, r4, r5
 80002b0:	10a4      	asrs	r4, r4, #2
 80002b2:	2600      	movs	r6, #0
 80002b4:	42a6      	cmp	r6, r4
 80002b6:	d109      	bne.n	80002cc <__libc_init_array+0x24>
 80002b8:	4d0b      	ldr	r5, [pc, #44]	; (80002e8 <__libc_init_array+0x40>)
 80002ba:	4c0c      	ldr	r4, [pc, #48]	; (80002ec <__libc_init_array+0x44>)
 80002bc:	f000 f818 	bl	80002f0 <_init>
 80002c0:	1b64      	subs	r4, r4, r5
 80002c2:	10a4      	asrs	r4, r4, #2
 80002c4:	2600      	movs	r6, #0
 80002c6:	42a6      	cmp	r6, r4
 80002c8:	d105      	bne.n	80002d6 <__libc_init_array+0x2e>
 80002ca:	bd70      	pop	{r4, r5, r6, pc}
 80002cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80002d0:	4798      	blx	r3
 80002d2:	3601      	adds	r6, #1
 80002d4:	e7ee      	b.n	80002b4 <__libc_init_array+0xc>
 80002d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80002da:	4798      	blx	r3
 80002dc:	3601      	adds	r6, #1
 80002de:	e7f2      	b.n	80002c6 <__libc_init_array+0x1e>
 80002e0:	08000308 	.word	0x08000308
 80002e4:	08000308 	.word	0x08000308
 80002e8:	08000308 	.word	0x08000308
 80002ec:	0800030c 	.word	0x0800030c

080002f0 <_init>:
 80002f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002f2:	bf00      	nop
 80002f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002f6:	bc08      	pop	{r3}
 80002f8:	469e      	mov	lr, r3
 80002fa:	4770      	bx	lr

080002fc <_fini>:
 80002fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002fe:	bf00      	nop
 8000300:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000302:	bc08      	pop	{r3}
 8000304:	469e      	mov	lr, r3
 8000306:	4770      	bx	lr
